{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/components/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { useData } from '../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const {\n    totalCO2Data,\n    loading\n  } = useData();\n  const calendarData = useMemo(() => {\n    console.log(totalCO2Data);\n    if (!totalCO2Data || !totalCO2Data.data || !totalCO2Data.meta) return null;\n    function getRandomColorHSL() {\n      return `hsl(${Math.floor(Math.random() * 360)}, 70%, 50%)`;\n    }\n    const groupMap = {};\n    totalCO2Data.data.forEach(item => {\n      const type = item[\"UMD Type\"];\n      const name = item[\"Building Name\"];\n      const value = item[\"Total (kkg CO2e)\"];\n      if (!type || !name || typeof value !== \"number\") return;\n      if (!groupMap[type]) {\n        groupMap[type] = {\n          name: type,\n          color: getRandomColorHSL(),\n          children: []\n        };\n      }\n      groupMap[type].children.push({\n        name: name,\n        color: getRandomColorHSL(),\n        loc: value\n      });\n    });\n    const sunburstData = {\n      name: \"UMD Buildings\",\n      color: getRandomColorHSL(),\n      children: Object.values(groupMap)\n    };\n    console.log(sunburstData);\n    return sunburstData;\n  }, [totalCO2Data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (!calendarData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 29\n  }, this);\n  console.log(calendarData);\n  const data = [{\n    id: 'Series 1',\n    data: [{\n      x: 'Jan',\n      y: 200\n    }, {\n      x: 'Feb',\n      y: 300\n    }, {\n      x: 'Mar',\n      y: 400\n    }, {\n      x: 'Apr',\n      y: 500\n    }, {\n      x: 'May',\n      y: 600\n    }]\n  }, {\n    id: 'Series 2',\n    data: [{\n      x: 'Jan',\n      y: 100\n    }, {\n      x: 'Feb',\n      y: 400\n    }, {\n      x: 'Mar',\n      y: 250\n    }, {\n      x: 'Apr',\n      y: 450\n    }, {\n      x: 'May',\n      y: 300\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      data: calendarData,\n      margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      linkDistance: e => e.distance,\n      centeringStrength: 0.3,\n      repulsivity: 6,\n      nodeSize: n => n.size,\n      activeNodeSize: n => 1.5 * n.size,\n      nodeColor: e => e.color,\n      nodeBorderWidth: 1,\n      nodeBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]]\n      },\n      linkThickness: n => 2 + 2 * n.target.data.height,\n      linkBlendMode: \"multiply\",\n      motionConfig: \"wobbly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"3XKMhCbhDsYsjuTwXJgnb8q43IA=\", false, function () {\n  return [useData];\n});\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useMemo","ResponsiveNetwork","useData","jsxDEV","_jsxDEV","LineChart","_s","totalCO2Data","loading","calendarData","console","log","data","meta","getRandomColorHSL","Math","floor","random","groupMap","forEach","item","type","name","value","color","children","push","loc","sunburstData","Object","values","fileName","_jsxFileName","lineNumber","columnNumber","id","x","y","style","height","margin","top","right","bottom","left","linkDistance","e","distance","centeringStrength","repulsivity","nodeSize","n","size","activeNodeSize","nodeColor","nodeBorderWidth","nodeBorderColor","from","modifiers","linkThickness","target","linkBlendMode","motionConfig","_c","$RefreshReg$"],"sources":["/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/components/LineChart.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network'\nimport { useData } from '../context/DataProvider';\n\nconst LineChart = () => {\n  const { totalCO2Data, loading } = useData();\n\n  const calendarData = useMemo(() => {\n    console.log(totalCO2Data);\n    if (!totalCO2Data || !totalCO2Data.data || !totalCO2Data.meta) return null;\n  \n    function getRandomColorHSL() {\n      return `hsl(${Math.floor(Math.random() * 360)}, 70%, 50%)`;\n    }\n  \n    const groupMap = {};\n  \n    totalCO2Data.data.forEach(item => {\n      const type = item[\"UMD Type\"];\n      const name = item[\"Building Name\"];\n      const value = item[\"Total (kkg CO2e)\"];\n  \n      if (!type || !name || typeof value !== \"number\") return;\n  \n      if (!groupMap[type]) {\n        groupMap[type] = {\n          name: type,\n          color: getRandomColorHSL(),\n          children: [],\n        };\n      }\n  \n      groupMap[type].children.push({\n        name: name,\n        color: getRandomColorHSL(),\n        loc: value,\n      });\n    });\n  \n    const sunburstData = {\n      name: \"UMD Buildings\",\n      color: getRandomColorHSL(),\n      children: Object.values(groupMap),\n    };\n  \n    console.log(sunburstData);\n    return sunburstData;\n  }, [totalCO2Data]);\n  \n  if (loading) return <div>Loading data...</div>;\n  if (!calendarData) return <div>No data available</div>;  \n\n  console.log(calendarData)\n\n  const data = [\n    {\n      id: 'Series 1',\n      data: [\n        { x: 'Jan', y: 200 },\n        { x: 'Feb', y: 300 },\n        { x: 'Mar', y: 400 },\n        { x: 'Apr', y: 500 },\n        { x: 'May', y: 600 },\n      ],\n    },\n    {\n      id: 'Series 2',\n      data: [\n        { x: 'Jan', y: 100 },\n        { x: 'Feb', y: 400 },\n        { x: 'Mar', y: 250 },\n        { x: 'Apr', y: 450 },\n        { x: 'May', y: 300 },\n      ],\n    },\n  ];\n\n  return (\n    <div style={{ height: 400 }}>\n    <ResponsiveNetwork\n        data={calendarData}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        linkDistance={e=>e.distance}\n        centeringStrength={0.3}\n        repulsivity={6}\n        nodeSize={n=>n.size}\n        activeNodeSize={n=>1.5*n.size}\n        nodeColor={e=>e.color}\n        nodeBorderWidth={1}\n        nodeBorderColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    0.8\n                ]\n            ]\n        }}\n        linkThickness={n=>2+2*n.target.data.height}\n        linkBlendMode=\"multiply\"\n        motionConfig=\"wobbly\"\n    />\n  </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}