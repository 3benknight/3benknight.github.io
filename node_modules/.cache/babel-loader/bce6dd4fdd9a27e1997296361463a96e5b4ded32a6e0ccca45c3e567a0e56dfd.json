{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/context/DataProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/DataProvider.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [totalCO2Data, setTotalCO2Data] = useState(null);\n  const [campusData, setCampusData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Promise.all([fetch('/data/Total_co2.csv').then(res => res.text()), fetch('/data/campus.csv').then(res => res.text())]).then(([totalCO2Text, campusText]) => {\n      Papa.parse(totalCO2Text, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          setTotalCO2Data(result);\n        }\n      });\n      Papa.parse(campusText, {\n        header: true,\n        dynamicTyping: true,\n        complete: result => {\n          setCampusData(result);\n        }\n      });\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching CSV data:', error);\n      setLoading(false);\n    });\n  }, []); // empty dependency array ensures this runs only once\n\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      totalCO2Data,\n      campusData,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"X6ZajEmk0nU+ZLgFZzWCF3epxC4=\");\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n  return useContext(DataContext);\n};\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Papa","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","totalCO2Data","setTotalCO2Data","campusData","setCampusData","loading","setLoading","Promise","all","fetch","then","res","text","totalCO2Text","campusText","parse","header","dynamicTyping","complete","result","catch","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","$RefreshReg$"],"sources":["/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/context/DataProvider.jsx"],"sourcesContent":["// src/context/DataProvider.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Papa from 'papaparse';\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n  const [totalCO2Data, setTotalCO2Data] = useState(null);\n  const [campusData, setCampusData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    Promise.all([\n      fetch('/data/Total_co2.csv').then(res => res.text()),\n      fetch('/data/campus.csv').then(res => res.text())\n    ])\n      .then(([totalCO2Text, campusText]) => {\n        Papa.parse(totalCO2Text, {\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => {\n            setTotalCO2Data(result);\n          }\n        });\n        Papa.parse(campusText, {\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => {\n            setCampusData(result);\n          }\n        });\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching CSV data:', error);\n        setLoading(false);\n      });\n  }, []); // empty dependency array ensures this runs only once\n\n  return (\n    <DataContext.Provider value={{ totalCO2Data, campusData, loading }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport const useData = () => useContext(DataContext);\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EACpDH,KAAK,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAClD,CAAC,CACCF,IAAI,CAAC,CAAC,CAACG,YAAY,EAAEC,UAAU,CAAC,KAAK;MACpCpB,IAAI,CAACqB,KAAK,CAACF,YAAY,EAAE;QACvBG,MAAM,EAAE,IAAI;QACZC,aAAa,EAAE,IAAI;QACnBC,QAAQ,EAAGC,MAAM,IAAK;UACpBjB,eAAe,CAACiB,MAAM,CAAC;QACzB;MACF,CAAC,CAAC;MACFzB,IAAI,CAACqB,KAAK,CAACD,UAAU,EAAE;QACrBE,MAAM,EAAE,IAAI;QACZC,aAAa,EAAE,IAAI;QACnBC,QAAQ,EAAGC,MAAM,IAAK;UACpBf,aAAa,CAACe,MAAM,CAAC;QACvB;MACF,CAAC,CAAC;MACFb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDc,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,YAAY;MAAEE,UAAU;MAAEE;IAAQ,CAAE;IAAAN,QAAA,EAChEA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAtCWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAwCzB,OAAO,MAAMgC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,UAAU,CAACM,WAAW,CAAC;AAAA;AAACkC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}