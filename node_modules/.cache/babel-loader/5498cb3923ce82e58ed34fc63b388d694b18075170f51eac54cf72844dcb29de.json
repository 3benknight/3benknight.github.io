{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/components/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network';\nimport { useData } from '../context/DataProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const {\n    totalCO2Data,\n    loading\n  } = useData();\n  const calendarData = useMemo(() => {\n    const buildings = totalCO2Data.data.filter(item => item[\"Building Name\"] && typeof item[\"Total (kkg CO2e)\"] === 'number');\n    const values = buildings.map(b => b[\"Total (kkg CO2e)\"]);\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    function scaleValue(val) {\n      const minSize = 5;\n      const maxSize = 20;\n      return minSize + (val - min) / (max - min) * (maxSize - minSize);\n    }\n    console.log(totalCO2Data);\n    if (!totalCO2Data || !totalCO2Data.data || !totalCO2Data.meta) return null;\n    function getRandomColorHSL() {\n      return `hsl(${Math.floor(Math.random() * 360)}, 70%, 50%)`;\n    }\n    const nodes = [];\n    const links = [];\n    const seenNodes = new Set();\n    totalCO2Data.data.forEach(item => {\n      const type = item[\"UMD Type\"];\n      const building = item[\"Building Name\"];\n      const value = item[\"Total (kkg CO2e)\"];\n      if (!type || !building || typeof value !== 'number') return;\n\n      // Add department node if not already seen\n      if (!seenNodes.has(type)) {\n        nodes.push({\n          id: type,\n          height: 1,\n          size: 10,\n          color: getRandomColorHSL()\n        });\n        seenNodes.add(type);\n      }\n\n      // Add building node\n      const buildingId = `${type}-${building}`;\n      nodes.push({\n        id: buildingId,\n        height: 0,\n        size: scaleValue(value),\n        color: getRandomColorHSL()\n      });\n\n      // Create link from department → building\n      links.push({\n        source: type,\n        target: buildingId,\n        distance: 30\n      });\n    });\n    return {\n      nodes,\n      links\n    };\n  }, [totalCO2Data]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 23\n  }, this);\n  if (!calendarData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 29\n  }, this);\n  console.log(calendarData);\n  const data = [{\n    id: 'Series 1',\n    data: [{\n      x: 'Jan',\n      y: 200\n    }, {\n      x: 'Feb',\n      y: 300\n    }, {\n      x: 'Mar',\n      y: 400\n    }, {\n      x: 'Apr',\n      y: 500\n    }, {\n      x: 'May',\n      y: 600\n    }]\n  }, {\n    id: 'Series 2',\n    data: [{\n      x: 'Jan',\n      y: 100\n    }, {\n      x: 'Feb',\n      y: 400\n    }, {\n      x: 'Mar',\n      y: 250\n    }, {\n      x: 'Apr',\n      y: 450\n    }, {\n      x: 'May',\n      y: 300\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400\n    },\n    children: /*#__PURE__*/_jsxDEV(ResponsiveNetwork, {\n      data: calendarData,\n      margin: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      linkDistance: e => e.distance,\n      centeringStrength: 0.1,\n      repulsivity: 1,\n      nodeSize: n => n.size,\n      activeNodeSize: n => 1.5 * n.size,\n      nodeColor: e => e.color,\n      nodeBorderWidth: 1,\n      nodeBorderColor: {\n        from: 'color',\n        modifiers: [['darker', 0.8]]\n      },\n      linkThickness: n => 2 + 2 * n.target.data.height,\n      linkBlendMode: \"multiply\",\n      motionConfig: \"wobbly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(LineChart, \"3XKMhCbhDsYsjuTwXJgnb8q43IA=\", false, function () {\n  return [useData];\n});\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useMemo","ResponsiveNetwork","useData","jsxDEV","_jsxDEV","LineChart","_s","totalCO2Data","loading","calendarData","buildings","data","filter","item","values","map","b","min","Math","max","scaleValue","val","minSize","maxSize","console","log","meta","getRandomColorHSL","floor","random","nodes","links","seenNodes","Set","forEach","type","building","value","has","push","id","height","size","color","add","buildingId","source","target","distance","children","fileName","_jsxFileName","lineNumber","columnNumber","x","y","style","margin","top","right","bottom","left","linkDistance","e","centeringStrength","repulsivity","nodeSize","n","activeNodeSize","nodeColor","nodeBorderWidth","nodeBorderColor","from","modifiers","linkThickness","linkBlendMode","motionConfig","_c","$RefreshReg$"],"sources":["/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/src/components/LineChart.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { ResponsiveNetwork } from '@nivo/network'\nimport { useData } from '../context/DataProvider';\n\nconst LineChart = () => {\n  const { totalCO2Data, loading } = useData();\n\n  const calendarData = useMemo(() => {\n    const buildings = totalCO2Data.data.filter(item => item[\"Building Name\"] && typeof item[\"Total (kkg CO2e)\"] === 'number');\n\n    const values = buildings.map(b => b[\"Total (kkg CO2e)\"]);\n    const min = Math.min(...values);\n    const max = Math.max(...values);\n\n    function scaleValue(val) {\n      const minSize = 5;\n      const maxSize = 20;\n      return minSize + ((val - min) / (max - min)) * (maxSize - minSize);\n    }\n\n    console.log(totalCO2Data);\n    if (!totalCO2Data || !totalCO2Data.data || !totalCO2Data.meta) return null;\n  \n    function getRandomColorHSL() {\n      return `hsl(${Math.floor(Math.random() * 360)}, 70%, 50%)`;\n    }\n  \n    const nodes = [];\n    const links = [];\n    const seenNodes = new Set();\n  \n    totalCO2Data.data.forEach(item => {\n      const type = item[\"UMD Type\"];\n      const building = item[\"Building Name\"];\n      const value = item[\"Total (kkg CO2e)\"];\n  \n      if (!type || !building || typeof value !== 'number') return;\n  \n      // Add department node if not already seen\n      if (!seenNodes.has(type)) {\n        nodes.push({\n          id: type,\n          height: 1,\n          size: 10,\n          color: getRandomColorHSL(),\n        });\n        seenNodes.add(type);\n      }\n  \n      // Add building node\n      const buildingId = `${type}-${building}`;\n      nodes.push({\n        id: buildingId,\n        height: 0,\n        size: scaleValue(value),\n        color: getRandomColorHSL(),\n      });\n  \n      // Create link from department → building\n      links.push({\n        source: type,\n        target: buildingId,\n        distance: 30,\n      });\n    });\n  \n    return { nodes, links };\n  }, [totalCO2Data]);  \n  \n  if (loading) return <div>Loading data...</div>;\n  if (!calendarData) return <div>No data available</div>;  \n\n  console.log(calendarData)\n\n  const data = [\n    {\n      id: 'Series 1',\n      data: [\n        { x: 'Jan', y: 200 },\n        { x: 'Feb', y: 300 },\n        { x: 'Mar', y: 400 },\n        { x: 'Apr', y: 500 },\n        { x: 'May', y: 600 },\n      ],\n    },\n    {\n      id: 'Series 2',\n      data: [\n        { x: 'Jan', y: 100 },\n        { x: 'Feb', y: 400 },\n        { x: 'Mar', y: 250 },\n        { x: 'Apr', y: 450 },\n        { x: 'May', y: 300 },\n      ],\n    },\n  ];\n\n  return (\n    <div style={{ height: 400 }}>\n    <ResponsiveNetwork\n        data={calendarData}\n        margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\n        linkDistance={e=>e.distance}\n        centeringStrength={0.1}\n        repulsivity={1}         \n        nodeSize={n=>n.size}\n        activeNodeSize={n=>1.5*n.size}\n        nodeColor={e=>e.color}\n        nodeBorderWidth={1}\n        nodeBorderColor={{\n            from: 'color',\n            modifiers: [\n                [\n                    'darker',\n                    0.8\n                ]\n            ]\n        }}\n        linkThickness={n=>2+2*n.target.data.height}\n        linkBlendMode=\"multiply\"\n        motionConfig=\"wobbly\"\n    />\n  </div>\n  );\n};\n\nexport default LineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}