{"ast":null,"code":"import { alignBox as e, Container as t, useTheme as o, useDimensions as n, useValueFormatter as i, SvgWrapper as r, ResponsiveWrapper as a, degreesToRadians as d, getRelativeCursor as l, isCursorInRect as c } from \"@nivo/core\";\nimport { BoxLegendSvg as h, renderLegendToCanvas as u } from \"@nivo/legends\";\nimport * as s from \"react\";\nimport { memo as f, useCallback as g, useMemo as m, createElement as v, useRef as y, useState as p, useEffect as x } from \"react\";\nimport { jsx as b, Fragment as S, jsxs as w } from \"react/jsx-runtime\";\nimport { useTooltip as W, BasicTooltip as L } from \"@nivo/tooltip\";\nimport { timeFormat as k } from \"d3-time-format\";\nimport { scaleQuantize as M } from \"d3-scale\";\nimport C from \"lodash/isDate\";\nimport z from \"lodash/memoize\";\nimport V from \"lodash/range\";\nimport { timeWeek as O, timeYear as I, timeWeeks as H, timeDays as D, timeMonths as B, timeDay as E, timeSunday as P, timeMonday as F, timeTuesday as R, timeWednesday as T, timeThursday as Y, timeFriday as j, timeSaturday as q } from \"d3-time\";\nfunction A() {\n  return A = Object.assign ? Object.assign.bind() : function (e) {\n    for (var t = 1; t < arguments.length; t++) {\n      var o = arguments[t];\n      for (var n in o) Object.prototype.hasOwnProperty.call(o, n) && (e[n] = o[n]);\n    }\n    return e;\n  }, A.apply(this, arguments);\n}\nfunction X(e, t) {\n  if (null == e) return {};\n  var o,\n    n,\n    i = {},\n    r = Object.keys(e);\n  for (n = 0; n < r.length; n++) o = r[n], t.indexOf(o) >= 0 || (i[o] = e[o]);\n  return i;\n}\nvar N,\n  Z = f(function (e) {\n    var t = e.years,\n      o = e.legend,\n      n = e.theme;\n    return b(S, {\n      children: t.map(function (e) {\n        return b(\"text\", {\n          transform: \"translate(\" + e.x + \",\" + e.y + \") rotate(\" + e.rotation + \")\",\n          textAnchor: \"middle\",\n          style: n.labels.text,\n          children: o(e.year)\n        }, e.year);\n      })\n    });\n  }),\n  G = f(function (e) {\n    var t = e.path,\n      o = e.borderWidth,\n      n = e.borderColor;\n    return b(\"path\", {\n      d: t,\n      style: {\n        fill: \"none\",\n        strokeWidth: o,\n        stroke: n,\n        pointerEvents: \"none\"\n      }\n    });\n  }),\n  J = f(function (e) {\n    var t = e.months,\n      o = e.legend,\n      n = e.theme;\n    return b(S, {\n      children: t.map(function (e) {\n        return b(\"text\", {\n          transform: \"translate(\" + e.x + \",\" + e.y + \") rotate(\" + e.rotation + \")\",\n          textAnchor: \"middle\",\n          style: n.labels.text,\n          children: o(e.year, e.month, e.date)\n        }, e.date.toString() + \".legend\");\n      })\n    });\n  }),\n  K = f(function (e) {\n    var t = e.data,\n      o = e.x,\n      n = e.y,\n      i = e.size,\n      r = e.color,\n      a = e.borderWidth,\n      d = e.borderColor,\n      l = e.isInteractive,\n      c = e.tooltip,\n      h = e.onMouseEnter,\n      u = e.onMouseMove,\n      f = e.onMouseLeave,\n      m = e.onClick,\n      v = e.formatValue,\n      y = W(),\n      p = y.showTooltipFromEvent,\n      x = y.hideTooltip,\n      S = g(function (e) {\n        if (\"value\" in t) {\n          var o = A({}, t, {\n            value: v(t.value),\n            data: A({}, t.data)\n          });\n          p(s.createElement(c, A({}, o)), e), null == h || h(t, e);\n        }\n      }, [p, c, t, h, v]),\n      w = g(function (e) {\n        if (\"value\" in t) {\n          var o = A({}, t, {\n            value: v(t.value),\n            data: A({}, t.data)\n          });\n          p(s.createElement(c, A({}, o)), e), u && u(t, e);\n        }\n      }, [p, c, t, u, v]),\n      L = g(function (e) {\n        \"value\" in t && (x(), null == f || f(t, e));\n      }, [x, t, f]),\n      k = g(function (e) {\n        return null == m ? void 0 : m(t, e);\n      }, [t, m]);\n    return b(\"rect\", {\n      x: o,\n      y: n,\n      width: i,\n      height: i,\n      style: {\n        fill: r,\n        strokeWidth: a,\n        stroke: d\n      },\n      onMouseEnter: l ? S : void 0,\n      onMouseMove: l ? w : void 0,\n      onMouseLeave: l ? L : void 0,\n      onClick: l ? k : void 0\n    });\n  }),\n  Q = f(function (e) {\n    var t = e.value,\n      o = e.day,\n      n = e.color;\n    return void 0 === t || isNaN(Number(t)) ? null : b(L, {\n      id: o,\n      value: t,\n      color: n,\n      enableChip: !0\n    });\n  }),\n  U = k(\"%b\"),\n  $ = {\n    colors: [\"#61cdbb\", \"#97e3d5\", \"#e8c1a0\", \"#f47560\"],\n    align: \"center\",\n    direction: \"horizontal\",\n    emptyColor: \"#fff\",\n    minValue: 0,\n    maxValue: \"auto\",\n    yearSpacing: 30,\n    yearLegend: function (e) {\n      return e;\n    },\n    yearLegendPosition: \"before\",\n    yearLegendOffset: 10,\n    monthBorderWidth: 2,\n    monthBorderColor: \"#000\",\n    monthSpacing: 0,\n    monthLegend: function (e, t, o) {\n      return U(o);\n    },\n    monthLegendPosition: \"before\",\n    monthLegendOffset: 10,\n    daySpacing: 0,\n    dayBorderWidth: 1,\n    dayBorderColor: \"#000\",\n    isInteractive: !0,\n    legends: [],\n    tooltip: Q\n  },\n  _ = A({}, $, {\n    role: \"img\"\n  }),\n  ee = A({}, $, {\n    pixelRatio: \"undefined\" != typeof window && null != (N = window.devicePixelRatio) ? N : 1\n  }),\n  te = A({}, _, {\n    dayBorderColor: \"#fff\",\n    dayRadius: 0,\n    square: !0,\n    weekdayLegendOffset: 75,\n    firstWeekday: \"sunday\"\n  }),\n  oe = function (e, t, o) {\n    var n = e.map(function (e) {\n      return e.value;\n    });\n    return [\"auto\" === t ? Math.min.apply(Math, n) : t, \"auto\" === o ? Math.max.apply(Math, n) : o];\n  },\n  ne = z(function (e) {\n    var t,\n      o = e.date,\n      n = e.cellSize,\n      i = e.yearIndex,\n      r = e.yearSpacing,\n      a = e.monthSpacing,\n      d = e.daySpacing,\n      l = e.direction,\n      c = e.originX,\n      h = e.originY,\n      u = new Date(o.getFullYear(), o.getMonth() + 1, 0),\n      s = O.count(I(o), o),\n      f = O.count(I(u), u),\n      g = o.getDay(),\n      m = u.getDay(),\n      v = c,\n      y = h,\n      p = i * (7 * (n + d) + r),\n      x = o.getMonth() * a;\n    \"horizontal\" === l ? (y += p, v += x) : (y += x, v += p);\n    var b = {\n      x: v,\n      y: y,\n      width: 0,\n      height: 0\n    };\n    return \"horizontal\" === l ? (t = [\"M\" + (v + (s + 1) * (n + d)) + \",\" + (y + g * (n + d)), \"H\" + (v + s * (n + d)) + \"V\" + (y + 7 * (n + d)), \"H\" + (v + f * (n + d)) + \"V\" + (y + (m + 1) * (n + d)), \"H\" + (v + (f + 1) * (n + d)) + \"V\" + y, \"H\" + (v + (s + 1) * (n + d)) + \"Z\"].join(\"\"), b.x = v + s * (n + d), b.width = v + (f + 1) * (n + d) - b.x, b.height = 7 * (n + d)) : (t = [\"M\" + (v + g * (n + d)) + \",\" + (y + (s + 1) * (n + d)), \"H\" + v + \"V\" + (y + (f + 1) * (n + d)), \"H\" + (v + (m + 1) * (n + d)) + \"V\" + (y + f * (n + d)), \"H\" + (v + 7 * (n + d)) + \"V\" + (y + s * (n + d)), \"H\" + (v + g * (n + d)) + \"Z\"].join(\"\"), b.y = y + s * (n + d), b.width = 7 * (n + d), b.height = y + (f + 1) * (n + d) - b.y), {\n      path: t,\n      bbox: b\n    };\n  }, function (e) {\n    var t = e.date,\n      o = e.cellSize,\n      n = e.yearIndex,\n      i = e.yearSpacing,\n      r = e.monthSpacing,\n      a = e.daySpacing,\n      d = e.direction,\n      l = e.originX,\n      c = e.originY;\n    return t.toString() + \".\" + o + \".\" + n + \".\" + i + \".\" + r + \".\" + a + \".\" + d + \".\" + l + \".\" + c;\n  }),\n  ie = k(\"%Y-%m-%d\"),\n  re = function (t) {\n    var o,\n      n = t.width,\n      i = t.height,\n      r = t.from,\n      a = t.to,\n      d = t.direction,\n      l = t.yearSpacing,\n      c = t.monthSpacing,\n      h = t.daySpacing,\n      u = t.align,\n      s = C(r) ? r : new Date(r),\n      f = C(a) ? a : new Date(a),\n      g = V(s.getFullYear(), f.getFullYear() + 1),\n      m = Math.max.apply(Math, g.map(function (e) {\n        return H(new Date(e, 0, 1), new Date(e + 1, 0, 1)).length;\n      })) + 1,\n      v = function (e) {\n        var t,\n          o,\n          n = e.width,\n          i = e.height,\n          r = e.direction,\n          a = e.yearRange,\n          d = e.yearSpacing,\n          l = e.monthSpacing,\n          c = e.daySpacing,\n          h = e.maxWeeks;\n        return \"horizontal\" === r ? (t = (n - 12 * l - c * h) / h, o = (i - (a.length - 1) * d - a.length * (8 * c)) / (7 * a.length)) : (t = (n - (a.length - 1) * d - a.length * (8 * c)) / (7 * a.length), o = (i - 12 * l - c * h) / h), Math.min(t, o);\n      }({\n        width: n,\n        height: i,\n        direction: d,\n        yearRange: g,\n        yearSpacing: l,\n        monthSpacing: c,\n        daySpacing: h,\n        maxWeeks: m\n      }),\n      y = v * m + h * m + 12 * c,\n      p = 7 * (v + h) * g.length + l * (g.length - 1),\n      x = \"horizontal\" === d ? y : p,\n      b = \"horizontal\" === d ? p : y,\n      S = e({\n        x: 0,\n        y: 0,\n        width: x,\n        height: b\n      }, {\n        x: 0,\n        y: 0,\n        width: n,\n        height: i\n      }, u),\n      w = S[0],\n      W = S[1];\n    o = \"horizontal\" === d ? function (e, t, o, n) {\n      return function (i, r, a, d) {\n        return {\n          x: i + O.count(I(a), a) * (e + n) + n / 2 + a.getMonth() * o,\n          y: r + a.getDay() * (e + n) + n / 2 + d * (t + 7 * (e + n))\n        };\n      };\n    }(v, l, c, h) : function (e, t, o, n) {\n      return function (i, r, a, d) {\n        var l = O.count(I(a), a);\n        return {\n          x: i + a.getDay() * (e + n) + n / 2 + d * (t + 7 * (e + n)),\n          y: r + l * (e + n) + n / 2 + a.getMonth() * o\n        };\n      };\n    }(v, l, c, h);\n    var L = [],\n      k = [],\n      M = [];\n    return g.forEach(function (e, t) {\n      var n = new Date(e, 0, 1),\n        i = new Date(e + 1, 0, 1);\n      M = M.concat(D(n, i).map(function (e) {\n        return A({\n          date: e,\n          day: ie(e),\n          size: v\n        }, o(w, W, e, t));\n      }));\n      var r = B(n, i).map(function (e) {\n        return A({\n          date: e,\n          year: e.getFullYear(),\n          month: e.getMonth()\n        }, ne({\n          originX: w,\n          originY: W,\n          date: e,\n          direction: d,\n          yearIndex: t,\n          yearSpacing: l,\n          monthSpacing: c,\n          daySpacing: h,\n          cellSize: v\n        }));\n      });\n      k = k.concat(r), L.push({\n        year: e,\n        bbox: {\n          x: r[0].bbox.x,\n          y: r[0].bbox.y,\n          width: r[11].bbox.x - r[0].bbox.x + r[11].bbox.width,\n          height: r[11].bbox.y - r[0].bbox.y + r[11].bbox.height\n        }\n      });\n    }), {\n      years: L,\n      months: k,\n      days: M,\n      cellSize: v,\n      calendarWidth: x,\n      calendarHeight: b,\n      originX: w,\n      originY: W\n    };\n  },\n  ae = function (e) {\n    var t = e.days,\n      o = e.data,\n      n = e.colorScale,\n      i = e.emptyColor;\n    return t.map(function (e) {\n      var t = o.find(function (t) {\n        return t.day === e.day;\n      });\n      return A({}, e, t ? {\n        color: n(t.value),\n        data: t,\n        value: t.value\n      } : {\n        color: i\n      });\n    });\n  },\n  de = function (e) {\n    var t = e.years,\n      o = e.direction,\n      n = e.position,\n      i = e.offset;\n    return t.map(function (e) {\n      var t = 0,\n        r = 0,\n        a = 0;\n      return \"horizontal\" === o && \"before\" === n ? (t = e.bbox.x - i, r = e.bbox.y + e.bbox.height / 2, a = -90) : \"horizontal\" === o && \"after\" === n ? (t = e.bbox.x + e.bbox.width + i, r = e.bbox.y + e.bbox.height / 2, a = -90) : \"vertical\" === o && \"before\" === n ? (t = e.bbox.x + e.bbox.width / 2, r = e.bbox.y - i) : (t = e.bbox.x + e.bbox.width / 2, r = e.bbox.y + e.bbox.height + i), A({}, e, {\n        x: t,\n        y: r,\n        rotation: a\n      });\n    });\n  },\n  le = function (e) {\n    var t = e.months,\n      o = e.direction,\n      n = e.position,\n      i = e.offset;\n    return t.map(function (e) {\n      var t = 0,\n        r = 0,\n        a = 0;\n      return \"horizontal\" === o && \"before\" === n ? (t = e.bbox.x + e.bbox.width / 2, r = e.bbox.y - i) : \"horizontal\" === o && \"after\" === n ? (t = e.bbox.x + e.bbox.width / 2, r = e.bbox.y + e.bbox.height + i) : \"vertical\" === o && \"before\" === n ? (t = e.bbox.x - i, r = e.bbox.y + e.bbox.height / 2, a = -90) : (t = e.bbox.x + e.bbox.width + i, r = e.bbox.y + e.bbox.height / 2, a = -90), A({}, e, {\n        x: t,\n        y: r,\n        rotation: a\n      });\n    });\n  },\n  ce = function (e) {\n    var t = e.width,\n      o = e.height,\n      n = e.from,\n      i = e.to,\n      r = e.direction,\n      a = e.yearSpacing,\n      d = e.monthSpacing,\n      l = e.daySpacing,\n      c = e.align;\n    return m(function () {\n      return re({\n        width: t,\n        height: o,\n        from: n,\n        to: i,\n        direction: r,\n        yearSpacing: a,\n        monthSpacing: d,\n        daySpacing: l,\n        align: c\n      });\n    }, [t, o, n, i, r, a, d, l, c]);\n  },\n  he = function (e) {\n    var t = e.data,\n      o = e.minValue,\n      n = e.maxValue,\n      i = e.colors,\n      r = e.colorScale;\n    return m(function () {\n      if (r) return r;\n      var e = oe(t, o, n);\n      return M().domain(e).range(i);\n    }, [t, o, n, i, r]);\n  },\n  ue = function (e) {\n    var t = e.years,\n      o = e.direction,\n      n = e.yearLegendPosition,\n      i = e.yearLegendOffset;\n    return m(function () {\n      return de({\n        years: t,\n        direction: o,\n        position: n,\n        offset: i\n      });\n    }, [t, o, n, i]);\n  },\n  se = function (e) {\n    var t = e.months,\n      o = e.direction,\n      n = e.monthLegendPosition,\n      i = e.monthLegendOffset;\n    return m(function () {\n      return le({\n        months: t,\n        direction: o,\n        position: n,\n        offset: i\n      });\n    }, [t, o, n, i]);\n  },\n  fe = function (e) {\n    var t = e.days,\n      o = e.data,\n      n = e.colorScale,\n      i = e.emptyColor;\n    return m(function () {\n      return ae({\n        days: t,\n        data: o,\n        colorScale: n,\n        emptyColor: i\n      });\n    }, [t, o, n, i]);\n  },\n  ge = [\"months\", \"years\"],\n  me = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  ve = function (e) {\n    var t = e.margin,\n      a = e.width,\n      d = e.height,\n      l = e.align,\n      c = void 0 === l ? _.align : l,\n      u = e.colors,\n      s = void 0 === u ? _.colors : u,\n      f = e.colorScale,\n      g = e.data,\n      m = e.direction,\n      v = void 0 === m ? _.direction : m,\n      y = e.emptyColor,\n      p = void 0 === y ? _.emptyColor : y,\n      x = e.from,\n      S = e.to,\n      W = e.minValue,\n      L = void 0 === W ? _.minValue : W,\n      k = e.maxValue,\n      M = void 0 === k ? _.maxValue : k,\n      C = e.valueFormat,\n      z = e.legendFormat,\n      V = e.yearLegend,\n      O = void 0 === V ? _.yearLegend : V,\n      I = e.yearLegendOffset,\n      H = void 0 === I ? _.yearLegendOffset : I,\n      D = e.yearLegendPosition,\n      B = void 0 === D ? _.yearLegendPosition : D,\n      E = e.yearSpacing,\n      P = void 0 === E ? _.yearSpacing : E,\n      F = e.monthBorderColor,\n      R = void 0 === F ? _.monthBorderColor : F,\n      T = e.monthBorderWidth,\n      Y = void 0 === T ? _.monthBorderWidth : T,\n      j = e.monthLegend,\n      q = void 0 === j ? _.monthLegend : j,\n      N = e.monthLegendOffset,\n      Q = void 0 === N ? _.monthLegendOffset : N,\n      U = e.monthLegendPosition,\n      $ = void 0 === U ? _.monthLegendPosition : U,\n      ee = e.monthSpacing,\n      te = void 0 === ee ? _.monthSpacing : ee,\n      oe = e.dayBorderColor,\n      ne = void 0 === oe ? _.dayBorderColor : oe,\n      ie = e.dayBorderWidth,\n      re = void 0 === ie ? _.dayBorderWidth : ie,\n      ae = e.daySpacing,\n      de = void 0 === ae ? _.daySpacing : ae,\n      le = e.isInteractive,\n      me = void 0 === le ? _.isInteractive : le,\n      ve = e.tooltip,\n      ye = void 0 === ve ? _.tooltip : ve,\n      pe = e.onClick,\n      xe = e.onMouseEnter,\n      be = e.onMouseLeave,\n      Se = e.onMouseMove,\n      we = e.legends,\n      We = void 0 === we ? _.legends : we,\n      Le = e.role,\n      ke = void 0 === Le ? _.role : Le,\n      Me = o(),\n      Ce = n(a, d, t),\n      ze = Ce.margin,\n      Ve = Ce.innerWidth,\n      Oe = Ce.innerHeight,\n      Ie = Ce.outerWidth,\n      He = Ce.outerHeight,\n      De = ce({\n        width: Ve,\n        height: Oe,\n        from: x,\n        to: S,\n        direction: v,\n        yearSpacing: P,\n        monthSpacing: te,\n        daySpacing: de,\n        align: c\n      }),\n      Be = De.months,\n      Ee = De.years,\n      Pe = X(De, ge),\n      Fe = he({\n        data: g,\n        minValue: L,\n        maxValue: M,\n        colors: s,\n        colorScale: f\n      }),\n      Re = se({\n        months: Be,\n        direction: v,\n        monthLegendPosition: $,\n        monthLegendOffset: Q\n      }),\n      Te = ue({\n        years: Ee,\n        direction: v,\n        yearLegendPosition: B,\n        yearLegendOffset: H\n      }),\n      Ye = fe({\n        days: Pe.days,\n        data: g,\n        colorScale: Fe,\n        emptyColor: p\n      }),\n      je = i(z),\n      qe = i(C);\n    return w(r, {\n      width: Ie,\n      height: He,\n      margin: ze,\n      role: ke,\n      children: [Ye.map(function (e) {\n        return b(K, {\n          data: e,\n          x: e.x,\n          y: e.y,\n          size: e.size,\n          color: e.color,\n          borderWidth: re,\n          borderColor: ne,\n          onMouseEnter: xe,\n          onMouseLeave: be,\n          onMouseMove: Se,\n          isInteractive: me,\n          tooltip: ye,\n          onClick: pe,\n          formatValue: qe\n        }, e.date.toString());\n      }), Be.map(function (e) {\n        return b(G, {\n          path: e.path,\n          borderWidth: Y,\n          borderColor: R\n        }, e.date.toString());\n      }), b(J, {\n        months: Re,\n        legend: q,\n        theme: Me\n      }), b(Z, {\n        years: Te,\n        legend: O,\n        theme: Me\n      }), We.map(function (e, t) {\n        var o = Fe.ticks(e.itemCount).map(function (e) {\n          return {\n            id: e,\n            label: je(e),\n            color: Fe(e)\n          };\n        });\n        return b(h, A({}, e, {\n          containerWidth: a,\n          containerHeight: d,\n          data: o\n        }), t);\n      })]\n    });\n  },\n  ye = function (e) {\n    var o = e.isInteractive,\n      n = void 0 === o ? _.isInteractive : o,\n      i = e.renderWrapper,\n      r = e.theme,\n      a = X(e, me);\n    return b(t, {\n      isInteractive: n,\n      renderWrapper: i,\n      theme: r,\n      children: b(ve, A({\n        isInteractive: n\n      }, a))\n    });\n  },\n  pe = k(\"%Y-%m-%d\"),\n  xe = function (e) {\n    var t,\n      o,\n      n = e.direction,\n      i = e.daySpacing,\n      r = e.offset,\n      a = e.square,\n      d = e.totalDays,\n      l = e.width,\n      c = e.height;\n    \"horizontal\" === n ? (l -= r, t = 7, o = Math.ceil(d / 7)) : (c -= r, o = 7, t = Math.ceil(d / 7));\n    var h = (c - i * (t + 1)) / t,\n      u = (l - i * (o + 1)) / o,\n      s = Math.min(h, u);\n    return {\n      columns: o,\n      rows: t,\n      cellHeight: a ? s : h,\n      cellWidth: a ? s : u\n    };\n  },\n  be = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\nfunction Se(e) {\n  return be.findIndex(function (t) {\n    return t.toLowerCase() === e;\n  });\n}\nvar we = function (e, t) {\n  var o = e.getDay() - Se(t);\n  return [0, 1, 2, 3, 4, 5, 6].slice(o)[0];\n};\nfunction We(e) {\n  var t = e.startDate,\n    o = e.date,\n    n = e.direction,\n    i = e.firstWeekday,\n    r = function (e) {\n      return [P, F, R, T, Y, j, q][Se(e)];\n    }(i),\n    a = r.count(t, o),\n    d = o.getMonth(),\n    l = o.getFullYear(),\n    c = 0,\n    h = 0;\n  return \"horizontal\" === n ? (c = a, h = we(o, i)) : (c = we(o, i), h = a), {\n    currentColumn: c,\n    year: l,\n    currentRow: h,\n    firstWeek: a,\n    month: d,\n    date: o\n  };\n}\nvar Le = function (e) {\n    var t = e.direction,\n      o = e.colorScale,\n      n = e.emptyColor,\n      i = e.from,\n      r = e.to,\n      a = e.data,\n      d = e.cellWidth,\n      l = e.cellHeight,\n      c = e.daySpacing,\n      h = e.offset,\n      u = e.firstWeekday,\n      s = c,\n      f = c;\n    \"horizontal\" === t ? s += h : f += h;\n    var g = i || a[0].date,\n      m = r || a[a.length - 1].date,\n      v = C(g) ? g : new Date(g),\n      y = C(m) ? m : new Date(m);\n    return D(v, y).map(function (e) {\n      return {\n        date: e,\n        day: pe(e)\n      };\n    }).map(function (e) {\n      var i = a.find(function (t) {\n          return t.day === e.day;\n        }),\n        r = We({\n          startDate: v,\n          date: e.date,\n          direction: t,\n          firstWeekday: u\n        }),\n        h = r.currentColumn,\n        g = r.currentRow,\n        m = r.firstWeek,\n        y = r.year,\n        p = r.month,\n        x = r.date,\n        b = {\n          x: s + c * h + d * h,\n          y: f + c * g + l * g\n        };\n      return i ? A({}, i, {\n        coordinates: b,\n        firstWeek: m,\n        month: p,\n        year: y,\n        date: x,\n        color: o(i.value),\n        width: d,\n        height: l\n      }) : A({}, e, {\n        coordinates: b,\n        firstWeek: m,\n        month: p,\n        year: y,\n        date: x,\n        color: n,\n        width: d,\n        height: l\n      });\n    });\n  },\n  ke = function (e) {\n    var t,\n      o,\n      n = e.cellHeight,\n      i = e.cellWidth,\n      r = e.direction,\n      a = e.daySpacing,\n      d = e.ticks,\n      l = void 0 === d ? [1, 3, 5] : d,\n      c = e.firstWeekday,\n      h = e.arrayOfWeekdays,\n      u = void 0 === h ? (t = be, o = Se(c), t.length && o ? (o %= t.length, t.slice(o, t.length).concat(t.slice(0, o))) : t) : h,\n      s = i + a,\n      f = n + a;\n    return l.map(function (e) {\n      return {\n        value: u[e],\n        rotation: \"horizontal\" === r ? 0 : -90,\n        y: \"horizontal\" === r ? f * (e + 1) - f / 3 : 0,\n        x: \"horizontal\" === r ? 0 : s * (e + 1) - s / 3\n      };\n    });\n  },\n  Me = function (e) {\n    var t = e.direction,\n      o = e.daySpacing,\n      n = e.days,\n      i = e.cellHeight,\n      r = e.cellWidth;\n    return n.reduce(function (e, n) {\n      if (e.weeks.length === n.firstWeek || !e.weeks.length && 1 === n.firstWeek) {\n        e.weeks.push(n);\n        var a = n.year + \"-\" + n.month;\n        if (Object.keys(e.months).includes(a)) \"horizontal\" === t ? e.months[a].bbox.width = (n.firstWeek - e.months[a].firstWeek) * (r + o) : e.months[a].bbox.height = (n.firstWeek - e.months[a].firstWeek) * (i + o);else {\n          var d = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n          };\n          \"horizontal\" === t ? (d.x = n.coordinates.x - o, d.height = i + o, d.width = r + 2 * o) : (d.y = n.coordinates.y - o, d.height = i + 2 * o, d.width = r + 2 * o), e.months[a] = {\n            date: n.date,\n            bbox: d,\n            firstWeek: n.firstWeek,\n            month: 0,\n            year: 0\n          };\n        }\n      }\n      return e;\n    }, {\n      months: {},\n      weeks: []\n    });\n  },\n  Ce = function (e) {\n    var t,\n      o,\n      n = e.from,\n      i = e.to,\n      r = e.data;\n    return t = n ? C(n) ? n : new Date(n) : r[0].date, o = n && i ? C(i) ? i : new Date(i) : r[r.length - 1].date, t.getDay() + E.count(t, o);\n  },\n  ze = f(function (e) {\n    var t = e.data,\n      o = e.x,\n      n = e.ry,\n      i = void 0 === n ? 5 : n,\n      r = e.rx,\n      a = void 0 === r ? 5 : r,\n      d = e.y,\n      l = e.width,\n      c = e.height,\n      h = e.color,\n      u = e.borderWidth,\n      s = e.borderColor,\n      f = e.isInteractive,\n      m = e.tooltip,\n      y = e.onMouseEnter,\n      p = e.onMouseMove,\n      x = e.onMouseLeave,\n      S = e.onClick,\n      w = e.formatValue,\n      L = W(),\n      k = L.showTooltipFromEvent,\n      M = L.hideTooltip,\n      C = g(function (e) {\n        if (\"value\" in t) {\n          var o = A({}, t, {\n            value: w(t.value)\n          });\n          k(v(m, A({}, o)), e), null == y || y(t, e);\n        }\n      }, [k, m, t, y, w]),\n      z = g(function (e) {\n        if (\"value\" in t) {\n          var o = A({}, t, {\n            value: w(t.value)\n          });\n          k(v(m, A({}, o)), e), null == p || p(t, e);\n        }\n      }, [k, m, t, p, w]),\n      V = g(function (e) {\n        \"value\" in t && (M(), null == x || x(t, e));\n      }, [M, t, x]),\n      O = g(function (e) {\n        return null == S ? void 0 : S(t, e);\n      }, [t, S]);\n    return b(\"rect\", {\n      x: o,\n      y: d,\n      rx: a,\n      ry: i,\n      width: l,\n      height: c,\n      style: {\n        fill: h,\n        strokeWidth: u,\n        stroke: s\n      },\n      onMouseEnter: f ? C : void 0,\n      onMouseMove: f ? z : void 0,\n      onMouseLeave: f ? V : void 0,\n      onClick: f ? O : void 0\n    });\n  }),\n  Ve = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Oe = function (e) {\n    var t = e.margin,\n      a = e.width,\n      d = e.height,\n      l = e.square,\n      c = void 0 === l ? te.square : l,\n      u = e.colors,\n      s = void 0 === u ? te.colors : u,\n      f = e.colorScale,\n      g = e.emptyColor,\n      v = void 0 === g ? te.emptyColor : g,\n      y = e.from,\n      p = e.to,\n      x = e.data,\n      S = e.direction,\n      W = void 0 === S ? te.direction : S,\n      L = e.minValue,\n      k = void 0 === L ? te.minValue : L,\n      M = e.maxValue,\n      C = void 0 === M ? te.maxValue : M,\n      z = e.valueFormat,\n      V = e.legendFormat,\n      O = e.monthLegend,\n      I = void 0 === O ? te.monthLegend : O,\n      H = e.monthLegendOffset,\n      D = void 0 === H ? te.monthLegendOffset : H,\n      B = e.monthLegendPosition,\n      E = void 0 === B ? te.monthLegendPosition : B,\n      P = e.weekdayLegendOffset,\n      F = void 0 === P ? te.weekdayLegendOffset : P,\n      R = e.weekdayTicks,\n      T = e.dayBorderColor,\n      Y = void 0 === T ? te.dayBorderColor : T,\n      j = e.dayBorderWidth,\n      q = void 0 === j ? te.dayBorderWidth : j,\n      X = e.daySpacing,\n      N = void 0 === X ? te.daySpacing : X,\n      Z = e.dayRadius,\n      G = void 0 === Z ? te.dayRadius : Z,\n      K = e.isInteractive,\n      Q = void 0 === K ? te.isInteractive : K,\n      U = e.tooltip,\n      $ = void 0 === U ? te.tooltip : U,\n      _ = e.onClick,\n      ee = e.onMouseEnter,\n      oe = e.onMouseLeave,\n      ne = e.onMouseMove,\n      ie = e.legends,\n      re = void 0 === ie ? te.legends : ie,\n      ae = e.role,\n      de = void 0 === ae ? te.role : ae,\n      le = e.firstWeekday,\n      ce = void 0 === le ? te.firstWeekday : le,\n      ue = n(a, d, t),\n      fe = ue.margin,\n      ge = ue.innerWidth,\n      me = ue.innerHeight,\n      ve = ue.outerWidth,\n      ye = ue.outerHeight,\n      pe = m(function () {\n        return x.map(function (e) {\n          return A({}, e, {\n            date: new Date(e.day + \"T00:00:00\")\n          });\n        }).sort(function (e, t) {\n          return e.day.localeCompare(t.day);\n        });\n      }, [x]),\n      be = o(),\n      Se = he({\n        data: pe,\n        minValue: k,\n        maxValue: C,\n        colors: s,\n        colorScale: f\n      }),\n      we = Ce({\n        from: y,\n        to: p,\n        data: pe\n      }),\n      We = xe({\n        square: c,\n        offset: F,\n        totalDays: we,\n        width: ge,\n        height: me,\n        daySpacing: N,\n        direction: W\n      }),\n      Ve = We.cellHeight,\n      Oe = We.cellWidth,\n      Ie = Le({\n        offset: F,\n        colorScale: Se,\n        emptyColor: v,\n        cellHeight: Ve,\n        cellWidth: Oe,\n        from: y,\n        to: p,\n        data: pe,\n        direction: W,\n        daySpacing: N,\n        firstWeekday: ce\n      }),\n      He = Object.values(Me({\n        daySpacing: N,\n        direction: W,\n        cellHeight: Ve,\n        cellWidth: Oe,\n        days: Ie\n      }).months),\n      De = ke({\n        direction: W,\n        cellHeight: Ve,\n        cellWidth: Oe,\n        daySpacing: N,\n        ticks: R,\n        firstWeekday: ce\n      }),\n      Be = se({\n        months: He,\n        direction: W,\n        monthLegendPosition: E,\n        monthLegendOffset: D\n      }),\n      Ee = i(z),\n      Pe = i(V);\n    return w(r, {\n      width: ve,\n      height: ye,\n      margin: fe,\n      role: de,\n      children: [De.map(function (e) {\n        return b(\"text\", {\n          transform: \"translate(\" + e.x + \",\" + e.y + \") rotate(\" + e.rotation + \")\",\n          textAnchor: \"left\",\n          style: be.labels.text,\n          children: e.value\n        }, e.value);\n      }), Ie.map(function (e) {\n        return b(ze, {\n          data: e,\n          x: e.coordinates.x,\n          rx: G,\n          y: e.coordinates.y,\n          ry: G,\n          width: Oe,\n          height: Ve,\n          color: e.color,\n          borderWidth: q,\n          borderColor: Y,\n          onMouseEnter: ee,\n          onMouseLeave: oe,\n          onMouseMove: ne,\n          isInteractive: Q,\n          tooltip: $,\n          onClick: _,\n          formatValue: Ee\n        }, e.date.toString());\n      }), b(J, {\n        months: Be,\n        legend: I,\n        theme: be\n      }), re.map(function (e, t) {\n        var o = Se.ticks(e.itemCount).map(function (e) {\n          return {\n            id: e,\n            label: Pe(e),\n            color: Se(e)\n          };\n        });\n        return b(h, A({}, e, {\n          containerWidth: a,\n          containerHeight: d,\n          data: o\n        }), t);\n      })]\n    });\n  },\n  Ie = function (e) {\n    var o = e.isInteractive,\n      n = void 0 === o ? te.isInteractive : o,\n      i = e.renderWrapper,\n      r = e.theme,\n      a = X(e, Ve);\n    return b(t, {\n      isInteractive: n,\n      renderWrapper: i,\n      theme: r,\n      children: b(Oe, A({\n        isInteractive: n\n      }, a))\n    });\n  },\n  He = function (e) {\n    return b(a, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return b(Ie, A({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  },\n  De = function (e) {\n    return b(a, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return b(ye, A({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  },\n  Be = [\"months\", \"years\"],\n  Ee = [\"isInteractive\", \"renderWrapper\", \"theme\"],\n  Pe = function (e, t, o, n, i, r) {\n    var a = l(t, e),\n      d = a[0],\n      h = a[1];\n    return o.find(function (e) {\n      return \"value\" in e && c(e.x + r.left - i / 2, e.y + r.top - i / 2, n + i, n + i, d, h);\n    });\n  },\n  Fe = f(function (e) {\n    var t = e.margin,\n      r = e.width,\n      a = e.height,\n      l = e.pixelRatio,\n      c = void 0 === l ? ee.pixelRatio : l,\n      h = e.align,\n      f = void 0 === h ? ee.align : h,\n      m = e.colors,\n      v = void 0 === m ? ee.colors : m,\n      S = e.colorScale,\n      w = e.data,\n      L = e.direction,\n      k = void 0 === L ? ee.direction : L,\n      M = e.emptyColor,\n      C = void 0 === M ? ee.emptyColor : M,\n      z = e.from,\n      V = e.to,\n      O = e.minValue,\n      I = void 0 === O ? ee.minValue : O,\n      H = e.maxValue,\n      D = void 0 === H ? ee.maxValue : H,\n      B = e.valueFormat,\n      E = e.legendFormat,\n      P = e.yearLegend,\n      F = void 0 === P ? ee.yearLegend : P,\n      R = e.yearLegendOffset,\n      T = void 0 === R ? ee.yearLegendOffset : R,\n      Y = e.yearLegendPosition,\n      j = void 0 === Y ? ee.yearLegendPosition : Y,\n      q = e.yearSpacing,\n      N = void 0 === q ? ee.yearSpacing : q,\n      Z = e.monthLegend,\n      G = void 0 === Z ? ee.monthLegend : Z,\n      J = e.monthLegendOffset,\n      K = void 0 === J ? ee.monthLegendOffset : J,\n      Q = e.monthLegendPosition,\n      U = void 0 === Q ? ee.monthLegendPosition : Q,\n      $ = e.monthSpacing,\n      _ = void 0 === $ ? ee.monthSpacing : $,\n      te = e.dayBorderColor,\n      oe = void 0 === te ? ee.dayBorderColor : te,\n      ne = e.dayBorderWidth,\n      ie = void 0 === ne ? ee.dayBorderWidth : ne,\n      re = e.daySpacing,\n      ae = void 0 === re ? ee.daySpacing : re,\n      de = e.isInteractive,\n      le = void 0 === de ? ee.isInteractive : de,\n      ge = e.tooltip,\n      me = void 0 === ge ? ee.tooltip : ge,\n      ve = e.onClick,\n      ye = e.onMouseEnter,\n      pe = e.onMouseLeave,\n      xe = e.onMouseMove,\n      be = e.legends,\n      Se = void 0 === be ? ee.legends : be,\n      we = y(null),\n      We = n(r, a, t),\n      Le = We.innerWidth,\n      ke = We.innerHeight,\n      Me = We.outerWidth,\n      Ce = We.outerHeight,\n      ze = We.margin,\n      Ve = ce({\n        width: Le,\n        height: ke,\n        from: z,\n        to: V,\n        direction: k,\n        yearSpacing: N,\n        monthSpacing: _,\n        daySpacing: ae,\n        align: f\n      }),\n      Oe = Ve.months,\n      Ie = Ve.years,\n      He = X(Ve, Be),\n      De = he({\n        data: w,\n        minValue: I,\n        maxValue: D,\n        colors: v,\n        colorScale: S\n      }),\n      Ee = se({\n        months: Oe,\n        direction: k,\n        monthLegendPosition: U,\n        monthLegendOffset: K\n      }),\n      Fe = ue({\n        years: Ie,\n        direction: k,\n        yearLegendPosition: j,\n        yearLegendOffset: T\n      }),\n      Re = fe({\n        days: He.days,\n        data: w,\n        colorScale: De,\n        emptyColor: C\n      }),\n      Te = p(null),\n      Ye = Te[0],\n      je = Te[1],\n      qe = o(),\n      Ae = i(B),\n      Xe = i(E),\n      Ne = W(),\n      Ze = Ne.showTooltipFromEvent,\n      Ge = Ne.hideTooltip;\n    x(function () {\n      var e;\n      if (we.current) {\n        we.current.width = Me * c, we.current.height = Ce * c;\n        var t = we.current.getContext(\"2d\");\n        t && (t.scale(c, c), t.fillStyle = qe.background, t.fillRect(0, 0, Me, Ce), t.translate(ze.left, ze.top), Re.forEach(function (e) {\n          t.fillStyle = e.color, ie > 0 && (t.strokeStyle = oe, t.lineWidth = ie), t.beginPath(), t.rect(e.x, e.y, e.size, e.size), t.fill(), ie > 0 && t.stroke();\n        }), t.textAlign = \"center\", t.textBaseline = \"middle\", t.fillStyle = null != (e = qe.labels.text.fill) ? e : \"\", t.font = qe.labels.text.fontSize + \"px \" + qe.labels.text.fontFamily, Ee.forEach(function (e) {\n          t.save(), t.translate(e.x, e.y), t.rotate(d(e.rotation)), t.fillText(String(G(e.year, e.month, e.date)), 0, 0), t.restore();\n        }), Fe.forEach(function (e) {\n          t.save(), t.translate(e.x, e.y), t.rotate(d(e.rotation)), t.fillText(String(F(e.year)), 0, 0), t.restore();\n        }), Se.forEach(function (e) {\n          var o = De.ticks(e.itemCount).map(function (e) {\n            return {\n              id: e,\n              label: Xe(e),\n              color: De(e)\n            };\n          });\n          u(t, A({}, e, {\n            data: o,\n            containerWidth: Le,\n            containerHeight: ke,\n            theme: qe\n          }));\n        }));\n      }\n    }, [we, ke, Le, Me, Ce, c, ze, Re, oe, ie, S, F, Fe, G, Ee, Se, qe, Xe, De]);\n    var Je = g(function (e) {\n        if (we.current) {\n          var t = Pe(e, we.current, Re, Re[0].size, ie, ze);\n          if (t) {\n            if (je(t), !(\"value\" in t)) return;\n            var o = A({}, t, {\n              value: Ae(t.value),\n              data: A({}, t.data)\n            });\n            Ze(s.createElement(me, A({}, o)), e), !Ye && (null == ye || ye(t, e)), null == xe || xe(t, e), Ye && (null == pe || pe(t, e));\n          } else Ge(), t && (null == pe || pe(t, e));\n        }\n      }, [we, Ye, ze, Re, je, Ae, ie, Ze, Ge, ye, xe, pe, me]),\n      Ke = g(function () {\n        je(null), Ge();\n      }, [je, Ge]),\n      Qe = g(function (e) {\n        if (ve && we.current) {\n          var t = Pe(e, we.current, Re, Re[0].size, ae, ze);\n          t && ve(t, e);\n        }\n      }, [we, ae, ze, Re, ve]);\n    return b(\"canvas\", {\n      ref: we,\n      width: Me * c,\n      height: Ce * c,\n      style: {\n        width: Me,\n        height: Ce\n      },\n      onMouseEnter: le ? Je : void 0,\n      onMouseMove: le ? Je : void 0,\n      onMouseLeave: le ? Ke : void 0,\n      onClick: le ? Qe : void 0\n    });\n  }),\n  Re = function (e) {\n    var o = e.isInteractive,\n      n = void 0 === o ? ee.isInteractive : o,\n      i = e.renderWrapper,\n      r = e.theme,\n      a = X(e, Ee);\n    return b(t, {\n      isInteractive: n,\n      renderWrapper: i,\n      theme: r,\n      children: b(Fe, A({\n        isInteractive: n\n      }, a))\n    });\n  },\n  Te = function (e) {\n    return b(a, {\n      children: function (t) {\n        var o = t.width,\n          n = t.height;\n        return b(Re, A({\n          width: o,\n          height: n\n        }, e));\n      }\n    });\n  };\nexport { be as ARRAY_OF_WEEKDAYS, ye as Calendar, Re as CalendarCanvas, De as ResponsiveCalendar, Te as ResponsiveCalendarCanvas, He as ResponsiveTimeRange, Ie as TimeRange, ae as bindDaysData, ee as calendarCanvasDefaultProps, _ as calendarDefaultProps, Le as computeCellPositions, xe as computeCellSize, oe as computeDomain, re as computeLayout, le as computeMonthLegendPositions, Me as computeMonthLegends, Ce as computeTotalDays, ke as computeWeekdays, de as computeYearLegendPositions, we as getDayIndex, Se as getFirstWeekdayIndex, te as timeRangeDefaultProps, ce as useCalendarLayout, he as useColorScale, fe as useDays, se as useMonthLegends, ue as useYearLegends };","map":{"version":3,"names":["N","Z","f","e","t","years","o","legend","n","theme","b","S","children","map","transform","x","y","rotation","textAnchor","style","labels","text","year","G","path","borderWidth","borderColor","d","fill","strokeWidth","stroke","pointerEvents","J","months","month","date","toString","K","data","i","size","r","color","a","l","isInteractive","c","tooltip","h","onMouseEnter","u","onMouseMove","onMouseLeave","m","onClick","v","formatValue","W","p","showTooltipFromEvent","hideTooltip","g","A","value","s","createElement","w","L","k","width","height","Q","day","isNaN","Number","id","enableChip","U","$","colors","align","direction","emptyColor","minValue","maxValue","yearSpacing","yearLegend","yearLegendPosition","yearLegendOffset","monthBorderWidth","monthBorderColor","monthSpacing","monthLegend","monthLegendPosition","monthLegendOffset","daySpacing","dayBorderWidth","dayBorderColor","legends","_","role","ee","pixelRatio","window","devicePixelRatio","te","dayRadius","square","weekdayLegendOffset","firstWeekday","oe","computeDomain","Math","min","apply","max","ne","z","cellSize","yearIndex","originX","originY","Date","getFullYear","getMonth","O","count","I","getDay","join","bbox","ie","re","computeLayout","from","to","C","V","H","length","yearRange","maxWeeks","M","forEach","concat","D","B","push","days","calendarWidth","calendarHeight","ae","bindDaysData","colorScale","find","de","computeYearLegendPositions","position","offset","le","computeMonthLegendPositions","ce","useCalendarLayout","he","useColorScale","domain","range","ue","useYearLegends","se","useMonthLegends","fe","useDays","ge","me","ve","InnerCalendar","margin","valueFormat","legendFormat","E","P","F","R","T","Y","j","q","ye","pe","xe","be","Se","we","We","Le","ke","Me","Ce","ze","Ve","innerWidth","Oe","innerHeight","Ie","outerWidth","He","outerHeight","De","Be","Ee","Pe","X","Fe","Re","Te","Ye","je","qe","ticks","itemCount","label","containerWidth","containerHeight","Calendar","renderWrapper","computeCellSize","totalDays","ceil","columns","rows","cellHeight","cellWidth","findIndex","toLowerCase","getDayIndex","slice","startDate","currentColumn","currentRow","firstWeek","computeCellPositions","coordinates","computeWeekdays","arrayOfWeekdays","computeMonthLegends","reduce","weeks","Object","keys","includes","computeTotalDays","ry","rx","InnerTimeRange","weekdayTicks","sort","localeCompare","values","TimeRange","ResponsiveTimeRange","ResponsiveCalendar","findDayUnderCursor","left","top","Ae","Xe","Ne","Ze","Ge","current","getContext","scale","fillStyle","background","fillRect","translate","strokeStyle","lineWidth","beginPath","rect","textAlign","textBaseline","font","fontSize","fontFamily","save","rotate","fillText","String","restore","Je","Ke","Qe","ref","CalendarCanvas","ResponsiveCalendarCanvas","ARRAY_OF_WEEKDAYS","calendarCanvasDefaultProps","calendarDefaultProps","getFirstWeekdayIndex","timeRangeDefaultProps"],"sources":["/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarYearLegends.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarMonthPath.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarMonthLegends.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarDay.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarTooltip.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/props.ts","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/compute/calendar.ts","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/hooks.ts","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/Calendar.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/compute/timeRange.ts","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/TimeRangeDay.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/TimeRange.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/ResponsiveTimeRange.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/ResponsiveCalendar.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/CalendarCanvas.tsx","/Users/benjaminknight/Documents/UMD/CMSC734/nivo-charts/node_modules/@nivo/calendar/src/ResponsiveCalendarCanvas.tsx"],"sourcesContent":["import { CalendarYearLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarYearLegends = memo(({ years, legend, theme }: CalendarYearLegendsProps) => {\n    return (\n        <>\n            {years.map(year => {\n                return (\n                    <text\n                        key={year.year}\n                        transform={`translate(${year.x},${year.y}) rotate(${year.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(year.year)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarMonthPathProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthPath = memo(\n    ({ path, borderWidth, borderColor }: CalendarMonthPathProps) => {\n        return (\n            <path\n                d={path}\n                style={{\n                    fill: 'none',\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                    pointerEvents: 'none',\n                }}\n            />\n        )\n    }\n)\n","import { CalendarMonthLegendsProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarMonthLegends = memo(({ months, legend, theme }: CalendarMonthLegendsProps) => {\n    return (\n        <>\n            {months.map(month => {\n                return (\n                    <text\n                        key={`${month.date.toString()}.legend`}\n                        transform={`translate(${month.x},${month.y}) rotate(${month.rotation})`}\n                        textAnchor=\"middle\"\n                        style={theme.labels.text}\n                    >\n                        {legend(month.year, month.month, month.date)}\n                    </text>\n                )\n            })}\n        </>\n    )\n})\n","import { CalendarDayProps } from './types'\nimport { useTooltip } from '@nivo/tooltip'\nimport { memo, useCallback } from 'react'\nimport * as React from 'react'\n\nexport const CalendarDay = memo(\n    ({\n        data,\n        x,\n        y,\n        size,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: CalendarDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                    data: { ...data.data },\n                }\n                showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                onMouseMove && onMouseMove(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(\n            (event: React.MouseEvent<SVGRectElement>) => onClick?.(data, event),\n            [data, onClick]\n        )\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                width={size}\n                height={size}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { CalendarTooltipProps } from './types'\nimport { memo } from 'react'\n\nexport const CalendarTooltip = memo(({ value, day, color }: CalendarTooltipProps) => {\n    if (value === undefined || isNaN(Number(value))) return null\n    return <BasicTooltip id={day} value={value} color={color} enableChip={true} />\n})\n","import { timeFormat } from 'd3-time-format'\nimport { CalendarLegendProps } from './types'\nimport { CalendarTooltip } from './CalendarTooltip'\n\nconst monthLabelFormat = timeFormat('%b')\n\nconst commonDefaultProps = {\n    colors: ['#61cdbb', '#97e3d5', '#e8c1a0', '#f47560'] as string[],\n\n    align: 'center',\n    direction: 'horizontal',\n    emptyColor: '#fff',\n\n    minValue: 0,\n    maxValue: 'auto',\n\n    yearSpacing: 30,\n    yearLegend: (year: number) => year,\n    yearLegendPosition: 'before',\n    yearLegendOffset: 10,\n\n    monthBorderWidth: 2,\n    monthBorderColor: '#000',\n    monthSpacing: 0,\n    monthLegend: (_year: number, _month: number, date: Date) => monthLabelFormat(date),\n    monthLegendPosition: 'before',\n    monthLegendOffset: 10,\n\n    daySpacing: 0,\n    dayBorderWidth: 1,\n    dayBorderColor: '#000',\n\n    isInteractive: true,\n\n    legends: [] as CalendarLegendProps[],\n    tooltip: CalendarTooltip,\n} as const\n\nexport const calendarDefaultProps = {\n    ...commonDefaultProps,\n    role: 'img',\n} as const\n\nexport const calendarCanvasDefaultProps = {\n    ...commonDefaultProps,\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n} as const\n\nexport const timeRangeDefaultProps = {\n    ...calendarDefaultProps,\n    dayBorderColor: '#fff',\n    dayRadius: 0,\n    square: true,\n    weekdayLegendOffset: 75,\n    firstWeekday: 'sunday',\n} as const\n","import isDate from 'lodash/isDate'\nimport memoize from 'lodash/memoize'\nimport range from 'lodash/range'\nimport { alignBox } from '@nivo/core'\nimport { timeFormat } from 'd3-time-format'\nimport { timeDays, timeWeek, timeWeeks, timeMonths, timeYear } from 'd3-time'\nimport { ScaleQuantize } from 'd3-scale'\nimport { BBox, CalendarSvgProps, ColorScale, Datum, Year } from '../types'\n\n/**\n * Compute min/max values.\n */\nexport const computeDomain = (\n    data: CalendarSvgProps['data'],\n    minSpec: NonNullable<CalendarSvgProps['minValue']>,\n    maxSpec: NonNullable<CalendarSvgProps['maxValue']>\n) => {\n    const allValues = data.map(d => d.value)\n    const minValue = minSpec === 'auto' ? Math.min(...allValues) : minSpec\n    const maxValue = maxSpec === 'auto' ? Math.max(...allValues) : maxSpec\n\n    return [minValue, maxValue] as const\n}\n\n/**\n * Compute day cell size according to current context.\n */\nconst computeCellSize = ({\n    width,\n    height,\n    direction,\n    yearRange,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    maxWeeks,\n}: Pick<\n    Required<CalendarSvgProps>,\n    'direction' | 'width' | 'height' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n> & {\n    maxWeeks: number\n    yearRange: number[]\n}) => {\n    let hCellSize\n    let vCellSize\n\n    if (direction === 'horizontal') {\n        hCellSize = (width - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n        vCellSize =\n            (height - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n    } else {\n        hCellSize =\n            (width - (yearRange.length - 1) * yearSpacing - yearRange.length * (8 * daySpacing)) /\n            (yearRange.length * 7)\n        vCellSize = (height - monthSpacing * 12 - daySpacing * maxWeeks) / maxWeeks\n    }\n\n    return Math.min(hCellSize, vCellSize)\n}\n\n/**\n * Computes month path and bounding box.\n */\nconst monthPathAndBBox = ({\n    date,\n    cellSize,\n    yearIndex,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    direction,\n    originX,\n    originY,\n}: Record<'cellSize' | 'originX' | 'originY' | 'yearIndex', number> &\n    Pick<\n        Required<CalendarSvgProps>,\n        'direction' | 'yearSpacing' | 'monthSpacing' | 'daySpacing'\n    > & {\n        date: Date\n    }) => {\n    // first day of next month\n    const t1 = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n\n    // ranges\n    const firstWeek = timeWeek.count(timeYear(date), date)\n    const lastWeek = timeWeek.count(timeYear(t1), t1)\n    const firstDay = date.getDay()\n    const lastDay = t1.getDay()\n\n    // offset according to year index and month\n    let xO = originX\n    let yO = originY\n    const yearOffset = yearIndex * (7 * (cellSize + daySpacing) + yearSpacing)\n    const monthOffset = date.getMonth() * monthSpacing\n    if (direction === 'horizontal') {\n        yO += yearOffset\n        xO += monthOffset\n    } else {\n        yO += monthOffset\n        xO += yearOffset\n    }\n\n    let path\n    const bbox = { x: xO, y: yO, width: 0, height: 0 }\n    if (direction === 'horizontal') {\n        path = [\n            `M${xO + (firstWeek + 1) * (cellSize + daySpacing)},${\n                yO + firstDay * (cellSize + daySpacing)\n            }`,\n            `H${xO + firstWeek * (cellSize + daySpacing)}V${yO + 7 * (cellSize + daySpacing)}`,\n            `H${xO + lastWeek * (cellSize + daySpacing)}V${\n                yO + (lastDay + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO + (lastWeek + 1) * (cellSize + daySpacing)}V${yO}`,\n            `H${xO + (firstWeek + 1) * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.x = xO + firstWeek * (cellSize + daySpacing)\n        bbox.width = xO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.x\n        bbox.height = 7 * (cellSize + daySpacing)\n    } else {\n        path = [\n            `M${xO + firstDay * (cellSize + daySpacing)},${\n                yO + (firstWeek + 1) * (cellSize + daySpacing)\n            }`,\n            `H${xO}V${yO + (lastWeek + 1) * (cellSize + daySpacing)}`,\n            `H${xO + (lastDay + 1) * (cellSize + daySpacing)}V${\n                yO + lastWeek * (cellSize + daySpacing)\n            }`,\n            `H${xO + 7 * (cellSize + daySpacing)}V${yO + firstWeek * (cellSize + daySpacing)}`,\n            `H${xO + firstDay * (cellSize + daySpacing)}Z`,\n        ].join('')\n\n        bbox.y = yO + firstWeek * (cellSize + daySpacing)\n        bbox.width = 7 * (cellSize + daySpacing)\n        bbox.height = yO + (lastWeek + 1) * (cellSize + daySpacing) - bbox.y\n    }\n\n    return { path, bbox }\n}\n\n/**\n * Creates a memoized version of monthPathAndBBox function.\n */\nconst memoMonthPathAndBBox = memoize(\n    monthPathAndBBox,\n    ({\n        date,\n        cellSize,\n        yearIndex,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        direction,\n        originX,\n        originY,\n    }) => {\n        return `${date.toString()}.${cellSize}.${yearIndex}.${yearSpacing}.${monthSpacing}.${daySpacing}.${direction}.${originX}.${originY}`\n    }\n)\n\n/**\n * Returns a function to Compute day cell position for horizontal layout.\n */\nconst cellPositionHorizontal = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n            y:\n                originY +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n        }\n    }\n}\n\n/**\n * Returns a function to Compute day cell position for vertical layout.\n */\nconst cellPositionVertical = (\n    cellSize: number,\n    yearSpacing: number,\n    monthSpacing: number,\n    daySpacing: number\n) => {\n    return (originX: number, originY: number, d: Date, yearIndex: number) => {\n        const weekOfYear = timeWeek.count(timeYear(d), d)\n\n        return {\n            x:\n                originX +\n                d.getDay() * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                yearIndex * (yearSpacing + 7 * (cellSize + daySpacing)),\n            y:\n                originY +\n                weekOfYear * (cellSize + daySpacing) +\n                daySpacing / 2 +\n                d.getMonth() * monthSpacing,\n        }\n    }\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute base layout, without caring about the current data.\n */\nexport const computeLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'align'\n    | 'direction'\n    | 'from'\n    | 'to'\n    | 'width'\n    | 'height'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n>) => {\n    const fromDate = isDate(from) ? from : new Date(from)\n    const toDate = isDate(to) ? to : new Date(to)\n\n    const yearRange = range(fromDate.getFullYear(), toDate.getFullYear() + 1)\n    const maxWeeks =\n        Math.max(\n            ...yearRange.map(\n                year => timeWeeks(new Date(year, 0, 1), new Date(year + 1, 0, 1)).length\n            )\n        ) + 1\n\n    const cellSize = computeCellSize({\n        width,\n        height,\n        direction,\n        yearRange,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        maxWeeks,\n    })\n\n    const monthsSize = cellSize * maxWeeks + daySpacing * maxWeeks + monthSpacing * 12\n    const yearsSize =\n        (cellSize + daySpacing) * 7 * yearRange.length + yearSpacing * (yearRange.length - 1)\n\n    const calendarWidth = direction === 'horizontal' ? monthsSize : yearsSize\n    const calendarHeight = direction === 'horizontal' ? yearsSize : monthsSize\n    const [originX, originY] = alignBox(\n        {\n            x: 0,\n            y: 0,\n            width: calendarWidth,\n            height: calendarHeight,\n        },\n        {\n            x: 0,\n            y: 0,\n            width,\n            height,\n        },\n        align\n    )\n\n    let cellPosition: ReturnType<typeof cellPositionHorizontal>\n    if (direction === 'horizontal') {\n        cellPosition = cellPositionHorizontal(cellSize, yearSpacing, monthSpacing, daySpacing)\n    } else {\n        cellPosition = cellPositionVertical(cellSize, yearSpacing, monthSpacing, daySpacing)\n    }\n\n    const years: Array<{\n        year: number\n        bbox: BBox\n    }> = []\n\n    let months: Array<{\n        path: string\n        bbox: {\n            x: number\n            y: number\n            width: number\n            height: number\n        }\n        date: Date\n        year: number\n        month: number\n    }> = []\n\n    let days: Array<Omit<Datum, 'color' | 'data' | 'value'>> = []\n\n    yearRange.forEach((year, i) => {\n        const yearStart = new Date(year, 0, 1)\n        const yearEnd = new Date(year + 1, 0, 1)\n\n        days = days.concat(\n            timeDays(yearStart, yearEnd).map(dayDate => {\n                return {\n                    date: dayDate,\n                    day: dayFormat(dayDate),\n                    size: cellSize,\n                    ...cellPosition(originX, originY, dayDate, i),\n                }\n            })\n        )\n\n        const yearMonths = timeMonths(yearStart, yearEnd).map(monthDate => ({\n            date: monthDate,\n            year: monthDate.getFullYear(),\n            month: monthDate.getMonth(),\n            ...memoMonthPathAndBBox({\n                originX,\n                originY,\n                date: monthDate,\n                direction,\n                yearIndex: i,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                cellSize,\n            }),\n        }))\n\n        months = months.concat(yearMonths)\n\n        years.push({\n            year,\n            bbox: {\n                x: yearMonths[0].bbox.x,\n                y: yearMonths[0].bbox.y,\n                width: yearMonths[11].bbox.x - yearMonths[0].bbox.x + yearMonths[11].bbox.width,\n                height: yearMonths[11].bbox.y - yearMonths[0].bbox.y + yearMonths[11].bbox.height,\n            },\n        })\n    })\n\n    return { years, months, days, cellSize, calendarWidth, calendarHeight, originX, originY }\n}\n\n/**\n * Bind current data to computed day cells.\n */\nexport const bindDaysData = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> & {\n    colorScale: ScaleQuantize<string> | ColorScale\n    days: Array<Omit<Datum, 'color' | 'data' | 'value'>>\n}) => {\n    return days.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        if (!dayData) {\n            return { ...day, color: emptyColor }\n        }\n\n        return {\n            ...day,\n            color: colorScale(dayData.value),\n            data: dayData,\n            value: dayData.value,\n        }\n    })\n}\n\nexport const computeYearLegendPositions = ({\n    years,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    years: Year[]\n}) => {\n    return years.map(year => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = year.bbox.x - offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = year.bbox.x + year.bbox.width + offset\n            y = year.bbox.y + year.bbox.height / 2\n            rotation = -90\n        } else if (direction === 'vertical' && position === 'before') {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y - offset\n        } else {\n            x = year.bbox.x + year.bbox.width / 2\n            y = year.bbox.y + year.bbox.height + offset\n        }\n\n        return {\n            ...year,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n\nexport const computeMonthLegendPositions = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    position,\n    offset,\n}: Pick<Required<CalendarSvgProps>, 'direction'> & {\n    offset: number\n    position: 'before' | 'after'\n    months: Month[]\n}) => {\n    return months.map(month => {\n        let x = 0\n        let y = 0\n        let rotation = 0\n        if (direction === 'horizontal' && position === 'before') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y - offset\n        } else if (direction === 'horizontal' && position === 'after') {\n            x = month.bbox.x + month.bbox.width / 2\n            y = month.bbox.y + month.bbox.height + offset\n        } else if (direction === 'vertical' && position === 'before') {\n            x = month.bbox.x - offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        } else {\n            x = month.bbox.x + month.bbox.width + offset\n            y = month.bbox.y + month.bbox.height / 2\n            rotation = -90\n        }\n\n        return {\n            ...month,\n            x,\n            y,\n            rotation,\n        }\n    })\n}\n","import { useMemo } from 'react'\nimport { ScaleQuantize, scaleQuantize } from 'd3-scale'\nimport {\n    computeDomain,\n    computeYearLegendPositions,\n    computeMonthLegendPositions,\n    bindDaysData,\n    computeLayout,\n} from './compute/calendar'\nimport { BBox, CalendarSvgProps, ColorScale, Year } from './types'\n\nexport const useCalendarLayout = ({\n    width,\n    height,\n    from,\n    to,\n    direction,\n    yearSpacing,\n    monthSpacing,\n    daySpacing,\n    align,\n}: Pick<\n    Required<CalendarSvgProps>,\n    | 'width'\n    | 'height'\n    | 'from'\n    | 'to'\n    | 'direction'\n    | 'yearSpacing'\n    | 'monthSpacing'\n    | 'daySpacing'\n    | 'align'\n>) =>\n    useMemo(\n        () =>\n            computeLayout({\n                width,\n                height,\n                from,\n                to,\n                direction,\n                yearSpacing,\n                monthSpacing,\n                daySpacing,\n                align,\n            }),\n        [width, height, from, to, direction, yearSpacing, monthSpacing, daySpacing, align]\n    )\n\nexport const useColorScale = ({\n    data,\n    minValue,\n    maxValue,\n    colors,\n    colorScale,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'minValue' | 'maxValue' | 'colors'> &\n    Pick<CalendarSvgProps, 'colorScale'>) =>\n    useMemo(() => {\n        if (colorScale) return colorScale\n        const domain = computeDomain(data, minValue, maxValue)\n        const defaultColorScale = scaleQuantize<string>().domain(domain).range(colors)\n        return defaultColorScale\n    }, [data, minValue, maxValue, colors, colorScale])\n\nexport const useYearLegends = ({\n    years,\n    direction,\n    yearLegendPosition,\n    yearLegendOffset,\n}: {\n    years: Year[]\n    direction: 'horizontal' | 'vertical'\n    yearLegendPosition: 'before' | 'after'\n    yearLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeYearLegendPositions({\n                years,\n                direction,\n                position: yearLegendPosition,\n                offset: yearLegendOffset,\n            }),\n        [years, direction, yearLegendPosition, yearLegendOffset]\n    )\n\nexport const useMonthLegends = <Month extends { bbox: BBox }>({\n    months,\n    direction,\n    monthLegendPosition,\n    monthLegendOffset,\n}: {\n    months: Month[]\n    direction: 'horizontal' | 'vertical'\n    monthLegendPosition: 'before' | 'after'\n    monthLegendOffset: number\n}) =>\n    useMemo(\n        () =>\n            computeMonthLegendPositions({\n                months,\n                direction,\n                position: monthLegendPosition,\n                offset: monthLegendOffset,\n            }),\n        [months, direction, monthLegendPosition, monthLegendOffset]\n    )\n\nexport const useDays = ({\n    days,\n    data,\n    colorScale,\n    emptyColor,\n}: Pick<Required<CalendarSvgProps>, 'data' | 'emptyColor'> &\n    Pick<Parameters<typeof bindDaysData>[0], 'days'> & {\n        colorScale: ScaleQuantize<string> | ColorScale\n    }) =>\n    useMemo(\n        () =>\n            bindDaysData({\n                days,\n                data,\n                colorScale,\n                emptyColor,\n            }),\n        [days, data, colorScale, emptyColor]\n    )\n","import { CalendarSvgProps } from './types'\nimport { Container, SvgWrapper, useTheme, useDimensions, useValueFormatter } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { CalendarYearLegends } from './CalendarYearLegends'\nimport { CalendarMonthPath } from './CalendarMonthPath'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { CalendarDay } from './CalendarDay'\nimport { calendarDefaultProps } from './props'\nimport { useMonthLegends, useYearLegends, useCalendarLayout, useDays, useColorScale } from './hooks'\n\nconst InnerCalendar = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    align = calendarDefaultProps.align,\n    colors = calendarDefaultProps.colors,\n    colorScale,\n    data,\n    direction = calendarDefaultProps.direction,\n    emptyColor = calendarDefaultProps.emptyColor,\n    from,\n    to,\n    minValue = calendarDefaultProps.minValue,\n    maxValue = calendarDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    yearLegend = calendarDefaultProps.yearLegend,\n    yearLegendOffset = calendarDefaultProps.yearLegendOffset,\n    yearLegendPosition = calendarDefaultProps.yearLegendPosition,\n    yearSpacing = calendarDefaultProps.yearSpacing,\n\n    monthBorderColor = calendarDefaultProps.monthBorderColor,\n    monthBorderWidth = calendarDefaultProps.monthBorderWidth,\n    monthLegend = calendarDefaultProps.monthLegend,\n    monthLegendOffset = calendarDefaultProps.monthLegendOffset,\n    monthLegendPosition = calendarDefaultProps.monthLegendPosition,\n    monthSpacing = calendarDefaultProps.monthSpacing,\n\n    dayBorderColor = calendarDefaultProps.dayBorderColor,\n    dayBorderWidth = calendarDefaultProps.dayBorderWidth,\n    daySpacing = calendarDefaultProps.daySpacing,\n\n    isInteractive = calendarDefaultProps.isInteractive,\n    tooltip = calendarDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = calendarDefaultProps.legends,\n    role = calendarDefaultProps.role,\n}: CalendarSvgProps) => {\n    const theme = useTheme()\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n    const { months, years, ...rest } = useCalendarLayout({\n        width: innerWidth,\n        height: innerHeight,\n        from,\n        to,\n        direction,\n        yearSpacing,\n        monthSpacing,\n        daySpacing,\n        align,\n    })\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n    const yearLegends = useYearLegends({ years, direction, yearLegendPosition, yearLegendOffset })\n    const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n    const formatLegend = useValueFormatter(legendFormat)\n    const formatValue = useValueFormatter(valueFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {days.map(d => (\n                <CalendarDay\n                    key={d.date.toString()}\n                    data={d}\n                    x={d.x}\n                    y={d.y}\n                    size={d.size}\n                    color={d.color}\n                    borderWidth={dayBorderWidth}\n                    borderColor={dayBorderColor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    onMouseMove={onMouseMove}\n                    isInteractive={isInteractive}\n                    tooltip={tooltip}\n                    onClick={onClick}\n                    formatValue={formatValue}\n                />\n            ))}\n            {months.map(m => (\n                <CalendarMonthPath\n                    key={m.date.toString()}\n                    path={m.path}\n                    borderWidth={monthBorderWidth}\n                    borderColor={monthBorderColor}\n                />\n            ))}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n            <CalendarYearLegends years={yearLegends} legend={yearLegend} theme={theme} />\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Calendar = ({\n    isInteractive = calendarDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendar isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import {\n    timeDays,\n    timeDay,\n    timeMonday,\n    timeTuesday,\n    timeWednesday,\n    timeThursday,\n    timeFriday,\n    timeSaturday,\n    timeSunday,\n} from 'd3-time'\nimport { timeFormat } from 'd3-time-format'\nimport { DateOrString, Weekday } from '../types'\nimport isDate from 'lodash/isDate'\n\n// Interfaces\ninterface ComputeBaseProps {\n    direction: 'horizontal' | 'vertical'\n}\n\ninterface ComputeBaseSpaceProps {\n    daySpacing: number\n    offset: number\n}\n\ninterface ComputeBaseDimensionProps {\n    cellWidth: number\n    cellHeight: number\n}\n\ninterface ComputeCellSize extends ComputeBaseProps, ComputeBaseSpaceProps {\n    totalDays: number\n    width: number\n    height: number\n    square: boolean\n}\n\ninterface ComputeCellPositions\n    extends ComputeBaseProps,\n        ComputeBaseSpaceProps,\n        ComputeBaseDimensionProps {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n    colorScale: (value: number) => string\n    emptyColor: string\n    firstWeekday: Weekday\n}\n\ninterface ComputeWeekdays\n    extends Omit<ComputeBaseProps, 'daysInRange'>,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    ticks?: number[]\n    arrayOfWeekdays?: string[]\n    firstWeekday: Weekday\n}\n\ninterface Day {\n    coordinates: {\n        x: number\n        y: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n    date: Date\n    color: string\n    day: string\n    value?: number\n}\n\ninterface Month {\n    date: Date\n    bbox: {\n        x: number\n        y: number\n        width: number\n        height: number\n    }\n    firstWeek: number\n    month: number\n    year: number\n}\n\ninterface ComputeMonths\n    extends ComputeBaseProps,\n        Omit<ComputeBaseSpaceProps, 'offset'>,\n        ComputeBaseDimensionProps {\n    days: Day[]\n}\n\ninterface ComputeTotalDays {\n    from?: DateOrString\n    to?: DateOrString\n    data: {\n        date: Date\n        day: string\n        value: number\n    }[]\n}\n\n// used for days range and data matching\nconst dayFormat = timeFormat('%Y-%m-%d')\n\n/**\n * Compute day cell size according to\n * current context.\n */\nexport const computeCellSize = ({\n    direction,\n    daySpacing,\n    offset,\n    square,\n    totalDays,\n    width,\n    height,\n}: ComputeCellSize) => {\n    const daysInRange = 7\n    let rows\n    let columns\n    let widthRest = width\n    let heightRest = height\n    if (direction === 'horizontal') {\n        widthRest -= offset\n        rows = daysInRange\n        columns = Math.ceil(totalDays / daysInRange)\n    } else {\n        heightRest -= offset\n        columns = daysInRange\n        rows = Math.ceil(totalDays / daysInRange)\n    }\n    // + 1 since we have to apply spacing to the rigth and left\n    const cellHeight = (heightRest - daySpacing * (rows + 1)) / rows\n    const cellWidth = (widthRest - daySpacing * (columns + 1)) / columns\n    // do we want square?\n    const size = Math.min(cellHeight, cellWidth)\n    return {\n        columns,\n        rows,\n        cellHeight: square ? size : cellHeight,\n        cellWidth: square ? size : cellWidth,\n    }\n}\n\nexport const ARRAY_OF_WEEKDAYS = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n]\n\nexport function getFirstWeekdayIndex(weekday: Weekday) {\n    return ARRAY_OF_WEEKDAYS.findIndex(item => item.toLowerCase() === weekday)\n}\n\nexport const getDayIndex = (date: Date, firstWeekday: Weekday) => {\n    const days = [0, 1, 2, 3, 4, 5, 6]\n    const day = date.getDay()\n    const offsetDay = day - getFirstWeekdayIndex(firstWeekday)\n    const [dayIndex] = days.slice(offsetDay)\n    return dayIndex\n}\n\nconst getTimeInterval = (firstWeekday: Weekday) => {\n    return [\n        timeSunday,\n        timeMonday,\n        timeTuesday,\n        timeWednesday,\n        timeThursday,\n        timeFriday,\n        timeSaturday,\n    ][getFirstWeekdayIndex(firstWeekday)]\n}\n\nfunction shiftArray<T>(arr: T[], x: number): T[] {\n    if (!arr.length || !x) return arr\n\n    x = x % arr.length\n    return arr.slice(x, arr.length).concat(arr.slice(0, x))\n}\n\nfunction computeGrid({\n    startDate,\n    date,\n    direction,\n    firstWeekday,\n}: {\n    startDate: Date\n    date: Date\n    direction: 'horizontal' | 'vertical'\n    firstWeekday: Weekday\n}) {\n    const timeInterval = getTimeInterval(firstWeekday)\n    const firstWeek = timeInterval.count(startDate, date)\n    const month = date.getMonth()\n    const year = date.getFullYear()\n\n    let currentColumn = 0\n    let currentRow = 0\n    if (direction === 'horizontal') {\n        currentColumn = firstWeek\n        currentRow = getDayIndex(date, firstWeekday)\n    } else {\n        currentColumn = getDayIndex(date, firstWeekday)\n        currentRow = firstWeek\n    }\n\n    return { currentColumn, year, currentRow, firstWeek, month, date }\n}\n\nexport const computeCellPositions = ({\n    direction,\n    colorScale,\n    emptyColor,\n    from,\n    to,\n    data,\n    cellWidth,\n    cellHeight,\n    daySpacing,\n    offset,\n    firstWeekday,\n}: ComputeCellPositions) => {\n    let x = daySpacing\n    let y = daySpacing\n\n    if (direction === 'horizontal') {\n        x += offset\n    } else {\n        y += offset\n    }\n\n    // we need to determine whether we need to add days to move to correct position\n    const start = from ? from : data[0].date\n    const end = to ? to : data[data.length - 1].date\n    const startDate = isDate(start) ? start : new Date(start)\n    const endDate = isDate(end) ? end : new Date(end)\n    const dateRange = timeDays(startDate, endDate).map(dayDate => {\n        return {\n            date: dayDate,\n            day: dayFormat(dayDate),\n        }\n    })\n\n    const dataWithCellPosition = dateRange.map(day => {\n        const dayData = data.find(item => item.day === day.day)\n\n        const { currentColumn, currentRow, firstWeek, year, month, date } = computeGrid({\n            startDate,\n            date: day.date,\n            direction,\n            firstWeekday,\n        })\n\n        const coordinates = {\n            x: x + daySpacing * currentColumn + cellWidth * currentColumn,\n            y: y + daySpacing * currentRow + cellHeight * currentRow,\n        }\n\n        if (!dayData) {\n            return {\n                ...day,\n                coordinates,\n                firstWeek,\n                month,\n                year,\n                date,\n                color: emptyColor,\n                width: cellWidth,\n                height: cellHeight,\n            }\n        }\n\n        return {\n            ...dayData,\n            coordinates,\n            firstWeek,\n            month,\n            year,\n            date,\n            color: colorScale(dayData.value),\n            width: cellWidth,\n            height: cellHeight,\n        }\n    })\n\n    return dataWithCellPosition\n}\n\nexport const computeWeekdays = ({\n    cellHeight,\n    cellWidth,\n    direction,\n    daySpacing,\n    ticks = [1, 3, 5],\n    firstWeekday,\n    arrayOfWeekdays = shiftArray(ARRAY_OF_WEEKDAYS, getFirstWeekdayIndex(firstWeekday)),\n}: ComputeWeekdays) => {\n    const sizes = {\n        width: cellWidth + daySpacing,\n        height: cellHeight + daySpacing,\n    }\n    return ticks.map(day => ({\n        value: arrayOfWeekdays[day],\n        rotation: direction === 'horizontal' ? 0 : -90,\n        y: direction === 'horizontal' ? sizes.height * (day + 1) - sizes.height / 3 : 0,\n        x: direction === 'horizontal' ? 0 : sizes.width * (day + 1) - sizes.width / 3,\n    }))\n}\n\nexport const computeMonthLegends = ({\n    direction,\n    daySpacing,\n    days,\n    cellHeight,\n    cellWidth,\n}: ComputeMonths) => {\n    const accumulator: {\n        months: { [key: string]: Month }\n        weeks: Day[]\n    } = {\n        months: {},\n        weeks: [],\n    }\n\n    return days.reduce((acc, day) => {\n        if (acc.weeks.length === day.firstWeek || (!acc.weeks.length && day.firstWeek === 1)) {\n            acc.weeks.push(day)\n\n            const key = `${day.year}-${day.month}`\n\n            if (!Object.keys(acc.months).includes(key)) {\n                const bbox = { x: 0, y: 0, width: 0, height: 0 }\n\n                if (direction === 'horizontal') {\n                    bbox.x = day.coordinates.x - daySpacing\n                    bbox.height = cellHeight + daySpacing\n                    bbox.width = cellWidth + daySpacing * 2\n                } else {\n                    bbox.y = day.coordinates.y - daySpacing\n                    bbox.height = cellHeight + daySpacing * 2\n                    bbox.width = cellWidth + daySpacing * 2\n                }\n\n                acc.months[key] = {\n                    date: day.date,\n                    bbox,\n                    firstWeek: day.firstWeek,\n                    month: 0,\n                    year: 0,\n                }\n            } else {\n                // enhance width/height\n                if (direction === 'horizontal') {\n                    acc.months[key].bbox.width =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellWidth + daySpacing)\n                } else {\n                    acc.months[key].bbox.height =\n                        (day.firstWeek - acc.months[key].firstWeek) * (cellHeight + daySpacing)\n                }\n            }\n        }\n        return acc\n    }, accumulator)\n}\n\nexport const computeTotalDays = ({ from, to, data }: ComputeTotalDays) => {\n    let startDate\n    let endDate\n    if (from) {\n        startDate = isDate(from) ? from : new Date(from)\n    } else {\n        startDate = data[0].date\n    }\n\n    if (from && to) {\n        endDate = isDate(to) ? to : new Date(to)\n    } else {\n        endDate = data[data.length - 1].date\n    }\n\n    return startDate.getDay() + timeDay.count(startDate, endDate)\n}\n","import { createElement, memo, useCallback, MouseEvent } from 'react'\nimport { useTooltip } from '@nivo/tooltip'\nimport { TimeRangeDayProps } from './types'\n\nexport const TimeRangeDay = memo(\n    ({\n        data,\n        x,\n        ry = 5,\n        rx = 5,\n        y,\n        width,\n        height,\n        color,\n        borderWidth,\n        borderColor,\n        isInteractive,\n        tooltip,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        formatValue,\n    }: TimeRangeDayProps) => {\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        const handleMouseEnter = useCallback(\n            (event: MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseEnter?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseEnter, formatValue]\n        )\n        const handleMouseMove = useCallback(\n            (event: MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                const formatedData = {\n                    ...data,\n                    value: formatValue(data.value),\n                }\n                showTooltipFromEvent(createElement(tooltip, { ...formatedData }), event)\n                onMouseMove?.(data, event)\n            },\n            [showTooltipFromEvent, tooltip, data, onMouseMove, formatValue]\n        )\n        const handleMouseLeave = useCallback(\n            (event: MouseEvent<SVGRectElement>) => {\n                if (!('value' in data)) {\n                    return\n                }\n\n                hideTooltip()\n                onMouseLeave?.(data, event)\n            },\n            [hideTooltip, data, onMouseLeave]\n        )\n        const handleClick = useCallback(\n            (event: MouseEvent<SVGRectElement>) => onClick?.(data, event),\n            [data, onClick]\n        )\n\n        return (\n            <rect\n                x={x}\n                y={y}\n                rx={rx}\n                ry={ry}\n                width={width}\n                height={height}\n                style={{\n                    fill: color,\n                    strokeWidth: borderWidth,\n                    stroke: borderColor,\n                }}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n","import { useMemo } from 'react'\nimport { Container, SvgWrapper, useValueFormatter, useTheme, useDimensions } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport {\n    computeWeekdays,\n    computeCellSize,\n    computeCellPositions,\n    computeMonthLegends,\n    computeTotalDays,\n} from './compute/timeRange'\nimport { useMonthLegends, useColorScale } from './hooks'\nimport { TimeRangeDay } from './TimeRangeDay'\nimport { CalendarMonthLegends } from './CalendarMonthLegends'\nimport { TimeRangeSvgProps } from './types'\nimport { timeRangeDefaultProps } from './props'\n\nconst InnerTimeRange = ({\n    margin: partialMargin,\n    width,\n    height,\n\n    square = timeRangeDefaultProps.square,\n    colors = timeRangeDefaultProps.colors,\n    colorScale,\n    emptyColor = timeRangeDefaultProps.emptyColor,\n    from,\n    to,\n    data: _data,\n    direction = timeRangeDefaultProps.direction,\n    minValue = timeRangeDefaultProps.minValue,\n    maxValue = timeRangeDefaultProps.maxValue,\n    valueFormat,\n    legendFormat,\n\n    monthLegend = timeRangeDefaultProps.monthLegend,\n    monthLegendOffset = timeRangeDefaultProps.monthLegendOffset,\n    monthLegendPosition = timeRangeDefaultProps.monthLegendPosition,\n\n    weekdayLegendOffset = timeRangeDefaultProps.weekdayLegendOffset,\n    weekdayTicks,\n\n    dayBorderColor = timeRangeDefaultProps.dayBorderColor,\n    dayBorderWidth = timeRangeDefaultProps.dayBorderWidth,\n    daySpacing = timeRangeDefaultProps.daySpacing,\n    dayRadius = timeRangeDefaultProps.dayRadius,\n\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    tooltip = timeRangeDefaultProps.tooltip,\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n\n    legends = timeRangeDefaultProps.legends,\n    role = timeRangeDefaultProps.role,\n\n    firstWeekday = timeRangeDefaultProps.firstWeekday,\n}: TimeRangeSvgProps) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const data = useMemo(\n        () =>\n            _data\n                .map(data => ({ ...data, date: new Date(`${data.day}T00:00:00`) }))\n                .sort((left, right) => left.day.localeCompare(right.day)),\n        [_data]\n    )\n\n    const theme = useTheme()\n    const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n\n    const totalDays = computeTotalDays({\n        from,\n        to,\n        data,\n    })\n\n    const { cellHeight, cellWidth } = computeCellSize({\n        square,\n        offset: weekdayLegendOffset,\n        totalDays: totalDays,\n        width: innerWidth,\n        height: innerHeight,\n        daySpacing,\n        direction,\n    })\n\n    const days = computeCellPositions({\n        offset: weekdayLegendOffset,\n        colorScale: colorScaleFn,\n        emptyColor,\n        cellHeight,\n        cellWidth,\n        from,\n        to,\n        data,\n        direction,\n        daySpacing,\n        firstWeekday,\n    })\n\n    // map the days and reduce the month\n    const months = Object.values(\n        computeMonthLegends({\n            daySpacing,\n            direction,\n            cellHeight,\n            cellWidth,\n            days,\n        }).months\n    )\n\n    const weekdayLegends = computeWeekdays({\n        direction,\n        cellHeight,\n        cellWidth,\n        daySpacing,\n        ticks: weekdayTicks,\n        firstWeekday,\n    })\n\n    const monthLegends = useMonthLegends({\n        months,\n        direction,\n        monthLegendPosition,\n        monthLegendOffset,\n    })\n\n    const formatValue = useValueFormatter(valueFormat)\n    const formatLegend = useValueFormatter(legendFormat)\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {weekdayLegends.map(legend => (\n                <text\n                    key={legend.value}\n                    transform={`translate(${legend.x},${legend.y}) rotate(${legend.rotation})`}\n                    textAnchor=\"left\"\n                    style={theme.labels.text}\n                >\n                    {legend.value}\n                </text>\n            ))}\n            {days.map(d => {\n                return (\n                    <TimeRangeDay\n                        key={d.date.toString()}\n                        data={d}\n                        x={d.coordinates.x}\n                        rx={dayRadius}\n                        y={d.coordinates.y}\n                        ry={dayRadius}\n                        width={cellWidth}\n                        height={cellHeight}\n                        color={d.color}\n                        borderWidth={dayBorderWidth}\n                        borderColor={dayBorderColor}\n                        onMouseEnter={onMouseEnter}\n                        onMouseLeave={onMouseLeave}\n                        onMouseMove={onMouseMove}\n                        isInteractive={isInteractive}\n                        tooltip={tooltip}\n                        onClick={onClick}\n                        formatValue={formatValue}\n                    />\n                )\n            })}\n            <CalendarMonthLegends months={monthLegends} legend={monthLegend} theme={theme} />\n\n            {legends.map((legend, i) => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                return (\n                    <BoxLegendSvg\n                        key={i}\n                        {...legend}\n                        containerWidth={width}\n                        containerHeight={height}\n                        data={legendData}\n                    />\n                )\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const TimeRange = ({\n    isInteractive = timeRangeDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: TimeRangeSvgProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerTimeRange isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { TimeRange } from './TimeRange'\nimport { TimeRangeSvgProps } from './types'\n\nexport const ResponsiveTimeRange = (props: Omit<TimeRangeSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <TimeRange width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { Calendar } from './Calendar'\nimport { CalendarSvgProps } from './types'\nimport { ResponsiveWrapper } from '@nivo/core'\n\nexport const ResponsiveCalendar = (props: Omit<CalendarSvgProps, 'height' | 'width'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Calendar width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n","import { memo, useRef, useState, useEffect, useCallback, MouseEvent } from 'react'\nimport * as React from 'react'\nimport {\n    Box,\n    Container,\n    isCursorInRect,\n    getRelativeCursor,\n    degreesToRadians,\n    useDimensions,\n    useTheme,\n    useValueFormatter,\n} from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { calendarCanvasDefaultProps } from './props'\nimport { useCalendarLayout, useColorScale, useMonthLegends, useYearLegends, useDays } from './hooks'\nimport { useTooltip } from '@nivo/tooltip'\nimport { CalendarCanvasProps } from './types'\n\nconst findDayUnderCursor = (\n    event: React.MouseEvent,\n    canvasEl: HTMLCanvasElement,\n    days: ReturnType<typeof useDays>,\n    size: number,\n    dayBorderWidth: number,\n    margin: Required<Box>\n) => {\n    const [x, y] = getRelativeCursor(canvasEl, event)\n    return days.find(day => {\n        return (\n            'value' in day &&\n            isCursorInRect(\n                day.x + margin.left - dayBorderWidth / 2,\n                day.y + margin.top - dayBorderWidth / 2,\n                size + dayBorderWidth,\n                size + dayBorderWidth,\n                x,\n                y\n            )\n        )\n    })\n}\n\nconst InnerCalendarCanvas = memo(\n    ({\n        margin: partialMargin,\n        width,\n        height,\n        pixelRatio = calendarCanvasDefaultProps.pixelRatio,\n\n        align = calendarCanvasDefaultProps.align,\n        colors = calendarCanvasDefaultProps.colors,\n        colorScale,\n        data,\n        direction = calendarCanvasDefaultProps.direction,\n        emptyColor = calendarCanvasDefaultProps.emptyColor,\n        from,\n        to,\n        minValue = calendarCanvasDefaultProps.minValue,\n        maxValue = calendarCanvasDefaultProps.maxValue,\n        valueFormat,\n        legendFormat,\n\n        yearLegend = calendarCanvasDefaultProps.yearLegend,\n        yearLegendOffset = calendarCanvasDefaultProps.yearLegendOffset,\n        yearLegendPosition = calendarCanvasDefaultProps.yearLegendPosition,\n        yearSpacing = calendarCanvasDefaultProps.yearSpacing,\n\n        monthLegend = calendarCanvasDefaultProps.monthLegend,\n        monthLegendOffset = calendarCanvasDefaultProps.monthLegendOffset,\n        monthLegendPosition = calendarCanvasDefaultProps.monthLegendPosition,\n        monthSpacing = calendarCanvasDefaultProps.monthSpacing,\n\n        dayBorderColor = calendarCanvasDefaultProps.dayBorderColor,\n        dayBorderWidth = calendarCanvasDefaultProps.dayBorderWidth,\n        daySpacing = calendarCanvasDefaultProps.daySpacing,\n\n        isInteractive = calendarCanvasDefaultProps.isInteractive,\n        tooltip = calendarCanvasDefaultProps.tooltip,\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        onMouseMove,\n\n        legends = calendarCanvasDefaultProps.legends,\n    }: CalendarCanvasProps) => {\n        const canvasEl = useRef<HTMLCanvasElement | null>(null)\n        const { innerWidth, innerHeight, outerWidth, outerHeight, margin } = useDimensions(\n            width,\n            height,\n            partialMargin\n        )\n        const { months, years, ...rest } = useCalendarLayout({\n            width: innerWidth,\n            height: innerHeight,\n            from,\n            to,\n            direction,\n            yearSpacing,\n            monthSpacing,\n            daySpacing,\n            align,\n        })\n        const colorScaleFn = useColorScale({ data, minValue, maxValue, colors, colorScale })\n        const monthLegends = useMonthLegends({\n            months,\n            direction,\n            monthLegendPosition,\n            monthLegendOffset,\n        })\n        const yearLegends = useYearLegends({\n            years,\n            direction,\n            yearLegendPosition,\n            yearLegendOffset,\n        })\n        const days = useDays({ days: rest.days, data, colorScale: colorScaleFn, emptyColor })\n        const [currentDay, setCurrentDay] = useState<ReturnType<typeof useDays>[number] | null>(\n            null\n        )\n        const theme = useTheme()\n        const formatValue = useValueFormatter(valueFormat)\n        const formatLegend = useValueFormatter(legendFormat)\n\n        const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n        useEffect(() => {\n            if (!canvasEl.current) return\n\n            canvasEl.current.width = outerWidth * pixelRatio\n            canvasEl.current.height = outerHeight * pixelRatio\n\n            const ctx = canvasEl.current.getContext('2d')\n\n            if (!ctx) return\n\n            ctx.scale(pixelRatio, pixelRatio)\n\n            ctx.fillStyle = theme.background\n            ctx.fillRect(0, 0, outerWidth, outerHeight)\n            ctx.translate(margin.left, margin.top)\n\n            days.forEach(day => {\n                ctx.fillStyle = day.color\n                if (dayBorderWidth > 0) {\n                    ctx.strokeStyle = dayBorderColor\n                    ctx.lineWidth = dayBorderWidth\n                }\n\n                ctx.beginPath()\n                ctx.rect(day.x, day.y, day.size, day.size)\n                ctx.fill()\n\n                if (dayBorderWidth > 0) {\n                    ctx.stroke()\n                }\n            })\n\n            ctx.textAlign = 'center'\n            ctx.textBaseline = 'middle'\n            ctx.fillStyle = theme.labels.text.fill ?? ''\n            ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n            monthLegends.forEach(month => {\n                ctx.save()\n                ctx.translate(month.x, month.y)\n                ctx.rotate(degreesToRadians(month.rotation))\n                ctx.fillText(String(monthLegend(month.year, month.month, month.date)), 0, 0)\n                ctx.restore()\n            })\n\n            yearLegends.forEach(year => {\n                ctx.save()\n                ctx.translate(year.x, year.y)\n                ctx.rotate(degreesToRadians(year.rotation))\n                ctx.fillText(String(yearLegend(year.year)), 0, 0)\n                ctx.restore()\n            })\n\n            legends.forEach(legend => {\n                const legendData = colorScaleFn.ticks(legend.itemCount).map(value => ({\n                    id: value,\n                    label: formatLegend(value),\n                    color: colorScaleFn(value),\n                }))\n\n                renderLegendToCanvas(ctx, {\n                    ...legend,\n                    data: legendData,\n                    containerWidth: innerWidth,\n                    containerHeight: innerHeight,\n                    theme,\n                })\n            })\n        }, [\n            canvasEl,\n            innerHeight,\n            innerWidth,\n            outerWidth,\n            outerHeight,\n            pixelRatio,\n            margin,\n            days,\n            dayBorderColor,\n            dayBorderWidth,\n            colorScale,\n            yearLegend,\n            yearLegends,\n            monthLegend,\n            monthLegends,\n            legends,\n            theme,\n            formatLegend,\n            colorScaleFn,\n        ])\n\n        const handleMouseHover = useCallback(\n            (event: MouseEvent<HTMLCanvasElement>) => {\n                if (!canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    dayBorderWidth,\n                    margin\n                )\n\n                if (data) {\n                    setCurrentDay(data)\n\n                    if (!('value' in data)) {\n                        return\n                    }\n\n                    const formatedData = {\n                        ...data,\n                        value: formatValue(data.value),\n                        data: { ...data.data },\n                    }\n                    showTooltipFromEvent(React.createElement(tooltip, { ...formatedData }), event)\n                    !currentDay && onMouseEnter?.(data, event)\n                    onMouseMove?.(data, event)\n                    currentDay && onMouseLeave?.(data, event)\n                } else {\n                    hideTooltip()\n                    data && onMouseLeave?.(data, event)\n                }\n            },\n            [\n                canvasEl,\n                currentDay,\n                margin,\n                days,\n                setCurrentDay,\n                formatValue,\n                dayBorderWidth,\n                showTooltipFromEvent,\n                hideTooltip,\n                onMouseEnter,\n                onMouseMove,\n                onMouseLeave,\n                tooltip,\n            ]\n        )\n\n        const handleMouseLeave = useCallback(() => {\n            setCurrentDay(null)\n            hideTooltip()\n        }, [setCurrentDay, hideTooltip])\n\n        const handleClick = useCallback(\n            (event: MouseEvent<HTMLCanvasElement>) => {\n                if (!onClick || !canvasEl.current) return\n\n                const data = findDayUnderCursor(\n                    event,\n                    canvasEl.current,\n                    days,\n                    days[0].size,\n                    daySpacing,\n                    margin\n                )\n\n                data && onClick(data, event)\n            },\n            [canvasEl, daySpacing, margin, days, onClick]\n        )\n\n        return (\n            <canvas\n                ref={canvasEl}\n                width={outerWidth * pixelRatio}\n                height={outerHeight * pixelRatio}\n                style={{\n                    width: outerWidth,\n                    height: outerHeight,\n                }}\n                onMouseEnter={isInteractive ? handleMouseHover : undefined}\n                onMouseMove={isInteractive ? handleMouseHover : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n            />\n        )\n    }\n)\n\nexport const CalendarCanvas = ({\n    isInteractive = calendarCanvasDefaultProps.isInteractive,\n    renderWrapper,\n    theme,\n    ...props\n}: CalendarCanvasProps) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerCalendarCanvas isInteractive={isInteractive} {...props} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { CalendarCanvas } from './CalendarCanvas'\nimport { CalendarCanvasProps } from './types'\n\nexport const ResponsiveCalendarCanvas = (props: Omit<CalendarCanvasProps, 'width' | 'height'>) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <CalendarCanvas width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}