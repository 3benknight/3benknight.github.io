{"ast":null,"code":"// src/context/DataProvider.jsx\nimport React,{createContext,useContext,useState,useEffect}from'react';import Papa from'papaparse';import{jsx as _jsx}from\"react/jsx-runtime\";const DataContext=/*#__PURE__*/createContext();export const DataProvider=_ref=>{let{children}=_ref;const[totalCO2Data,setTotalCO2Data]=useState(null);const[campusData,setCampusData]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{Promise.all([fetch('/data/Total_co2.csv').then(res=>res.text()),fetch('/data/campus.csv').then(res=>res.text())]).then(_ref2=>{let[totalCO2Text,campusText]=_ref2;Papa.parse(totalCO2Text,{header:true,dynamicTyping:true,complete:result=>{setTotalCO2Data(result);}});Papa.parse(campusText,{header:true,dynamicTyping:true,complete:result=>{setCampusData(result);}});setLoading(false);}).catch(error=>{console.error('Error fetching CSV data:',error);setLoading(false);});},[]);// empty dependency array ensures this runs only once\nreturn/*#__PURE__*/_jsx(DataContext.Provider,{value:{totalCO2Data,campusData,loading},children:children});};export const useData=()=>useContext(DataContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","Papa","jsx","_jsx","DataContext","DataProvider","_ref","children","totalCO2Data","setTotalCO2Data","campusData","setCampusData","loading","setLoading","Promise","all","fetch","then","res","text","_ref2","totalCO2Text","campusText","parse","header","dynamicTyping","complete","result","catch","error","console","Provider","value","useData"],"sources":["/Users/benjaminknight/Documents/UMD/CMSC734/3benknight.github.io/src/context/DataProvider.jsx"],"sourcesContent":["// src/context/DataProvider.jsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport Papa from 'papaparse';\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n  const [totalCO2Data, setTotalCO2Data] = useState(null);\n  const [campusData, setCampusData] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    Promise.all([\n      fetch('/data/Total_co2.csv').then(res => res.text()),\n      fetch('/data/campus.csv').then(res => res.text())\n    ])\n      .then(([totalCO2Text, campusText]) => {\n        Papa.parse(totalCO2Text, {\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => {\n            setTotalCO2Data(result);\n          }\n        });\n        Papa.parse(campusText, {\n          header: true,\n          dynamicTyping: true,\n          complete: (result) => {\n            setCampusData(result);\n          }\n        });\n        setLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching CSV data:', error);\n        setLoading(false);\n      });\n  }, []); // empty dependency array ensures this runs only once\n\n  return (\n    <DataContext.Provider value={{ totalCO2Data, campusData, loading }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport const useData = () => useContext(DataContext);\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,IAAI,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7B,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACW,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACdc,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACpDH,KAAK,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAACC,GAAG,EAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAClD,CAAC,CACCF,IAAI,CAACG,KAAA,EAAgC,IAA/B,CAACC,YAAY,CAAEC,UAAU,CAAC,CAAAF,KAAA,CAC/BnB,IAAI,CAACsB,KAAK,CAACF,YAAY,CAAE,CACvBG,MAAM,CAAE,IAAI,CACZC,aAAa,CAAE,IAAI,CACnBC,QAAQ,CAAGC,MAAM,EAAK,CACpBlB,eAAe,CAACkB,MAAM,CAAC,CACzB,CACF,CAAC,CAAC,CACF1B,IAAI,CAACsB,KAAK,CAACD,UAAU,CAAE,CACrBE,MAAM,CAAE,IAAI,CACZC,aAAa,CAAE,IAAI,CACnBC,QAAQ,CAAGC,MAAM,EAAK,CACpBhB,aAAa,CAACgB,MAAM,CAAC,CACvB,CACF,CAAC,CAAC,CACFd,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACDe,KAAK,CAACC,KAAK,EAAI,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDhB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEV,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EAACC,KAAK,CAAE,CAAExB,YAAY,CAAEE,UAAU,CAAEE,OAAQ,CAAE,CAAAL,QAAA,CAChEA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAA0B,OAAO,CAAGA,CAAA,GAAMnC,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}